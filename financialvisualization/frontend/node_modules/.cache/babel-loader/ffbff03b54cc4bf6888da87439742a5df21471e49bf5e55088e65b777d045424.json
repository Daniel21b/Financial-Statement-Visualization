{"ast":null,"code":"var _jsxFileName = \"/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Select } from '@/components/ui/select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"Equity\"\n};\nconst StockAnalysisDashboard = () => {\n  _s();\n  const [selectedData, setSelectedData] = useState('assets');\n  const [companyData, setCompanyData] = useState(null);\n  const [metricsData, setMetricsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const headers = {\n          'User-Agent': \"d.asfaw10@gmail.com\"\n        };\n        const companyTickersResponse = await axios.get(\"https://www.sec.gov/files/company_tickers.json\", {\n          headers\n        });\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompany(companyDataArray[0]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      }\n    };\n    fetchCompanies();\n  }, []);\n  useEffect(() => {\n    if (selectedCompany) {\n      const fetchData = async () => {\n        try {\n          setLoading(true);\n          const headers = {\n            'User-Agent': \"email@address.com\"\n          };\n          const cik = selectedCompany.cik_str.toString().padStart(10, '0');\n          const companyConceptResponse = await axios.get(`https://data.sec.gov/api/xbrl/companyconcept/CIK${cik}/us-gaap/${financialMetrics[selectedData]}.json`, {\n            headers\n          });\n          const data = companyConceptResponse.data.units.USD;\n          const filteredData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n          setMetricsData(filteredData);\n          setLoading(false);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n          setError(\"An error occurred while fetching financial data. Please try again later.\");\n          setLoading(false);\n        }\n      };\n      fetchData();\n    }\n  }, [selectedCompany, selectedData]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: [\"Stock Analysis: \", selectedCompany === null || selectedCompany === void 0 ? void 0 : selectedCompany.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedCompany === null || selectedCompany === void 0 ? void 0 : selectedCompany.ticker,\n        onChange: e => setSelectedCompany(companyList.find(c => c.ticker === e.target.value)),\n        children: companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company.ticker,\n          children: company.title\n        }, company.ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Data Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2 mb-4\",\n          children: Object.keys(financialMetrics).map(metric => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedData === metric ? 'default' : 'outline',\n            onClick: () => setSelectedData(metric),\n            children: financialMetrics[metric]\n          }, metric, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: metricsData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"end\",\n              tickFormatter: date => new Date(date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              labelFormatter: date => new Date(date).toLocaleDateString(),\n              formatter: value => `$${value.toLocaleString()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"val\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"Avg. \", financialMetrics[selectedData], \": $\", (metricsData.reduce((sum, item) => sum + item.val, 0) / metricsData.length).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(StockAnalysisDashboard, \"LiHb4a7fstC17iekTGIGu4QgaJ8=\");\n_c = StockAnalysisDashboard;\nexport default StockAnalysisDashboard;\nvar _c;\n$RefreshReg$(_c, \"StockAnalysisDashboard\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Card","CardContent","Button","Select","axios","jsxDEV","_jsxDEV","financialMetrics","assets","liabilities","equity","StockAnalysisDashboard","_s","selectedData","setSelectedData","companyData","setCompanyData","metricsData","setMetricsData","loading","setLoading","error","setError","companyList","setCompanyList","selectedCompany","setSelectedCompany","fetchCompanies","headers","companyTickersResponse","get","companyDataArray","Object","values","data","console","fetchData","cik","cik_str","toString","padStart","companyConceptResponse","units","USD","filteredData","filter","item","form","sort","a","b","Date","end","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","value","ticker","onChange","e","find","c","target","map","company","keys","metric","variant","onClick","width","height","strokeDasharray","dataKey","tickFormatter","date","toLocaleDateString","labelFormatter","formatter","toLocaleString","fill","reduce","sum","val","length","_c","$RefreshReg$"],"sources":["/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Select } from '@/components/ui/select';\nimport axios from 'axios';\n\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"Equity\",\n};\n\nconst StockAnalysisDashboard = () => {\n  const [selectedData, setSelectedData] = useState('assets');\n  const [companyData, setCompanyData] = useState(null);\n  const [metricsData, setMetricsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const headers = { 'User-Agent': \"d.asfaw10@gmail.com\" };\n        const companyTickersResponse = await axios.get(\n          \"https://www.sec.gov/files/company_tickers.json\",\n          { headers }\n        );\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompany(companyDataArray[0]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCompany) {\n      const fetchData = async () => {\n        try {\n          setLoading(true);\n          const headers = { 'User-Agent': \"email@address.com\" };\n          const cik = selectedCompany.cik_str.toString().padStart(10, '0');\n\n          const companyConceptResponse = await axios.get(\n            `https://data.sec.gov/api/xbrl/companyconcept/CIK${cik}/us-gaap/${financialMetrics[selectedData]}.json`,\n            { headers }\n          );\n\n          const data = companyConceptResponse.data.units.USD;\n          const filteredData = data.filter(item => item.form === '10-Q')\n            .sort((a, b) => new Date(a.end) - new Date(b.end));\n\n          setMetricsData(filteredData);\n          setLoading(false);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n          setError(\"An error occurred while fetching financial data. Please try again later.\");\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    }\n  }, [selectedCompany, selectedData]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div className=\"p-4\">\n      <header className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">Stock Analysis: {selectedCompany?.title}</h1>\n        <Select\n          value={selectedCompany?.ticker}\n          onChange={(e) => setSelectedCompany(companyList.find(c => c.ticker === e.target.value))}\n        >\n          {companyList.map(company => (\n            <option key={company.ticker} value={company.ticker}>\n              {company.title}\n            </option>\n          ))}\n        </Select>\n      </header>\n\n      <Card>\n        <CardContent>\n          <h2 className=\"text-xl font-semibold mb-4\">Data Overview</h2>\n          <div className=\"flex space-x-2 mb-4\">\n            {Object.keys(financialMetrics).map(metric => (\n              <Button\n                key={metric}\n                variant={selectedData === metric ? 'default' : 'outline'}\n                onClick={() => setSelectedData(metric)}\n              >\n                {financialMetrics[metric]}\n              </Button>\n            ))}\n          </div>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={metricsData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).toLocaleDateString()} />\n              <YAxis />\n              <Tooltip\n                labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                formatter={(value) => `$${value.toLocaleString()}`}\n              />\n              <Bar dataKey=\"val\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n          <div className=\"text-center mt-4\">\n            <span className=\"text-sm text-gray-500\">\n              Avg. {financialMetrics[selectedData]}: ${(metricsData.reduce((sum, item) => sum + item.val, 0) / metricsData.length).toLocaleString()}\n            </span>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default StockAnalysisDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}