{"ast":null,"code":"var _jsxFileName = \"/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { DollarSign, TrendingUp, Users, PieChart, Activity, Search, Bell, User } from 'lucide-react';\nimport axios from 'axios';\nimport pLimit from 'p-limit';\nimport './FinVueAnalysis.css'; // Make sure this CSS file exists and is in the same directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst financialMetrics = {\n  assets: {\n    name: \"Assets\",\n    icon: DollarSign\n  },\n  liabilities: {\n    name: \"Liabilities\",\n    icon: TrendingUp\n  },\n  equity: {\n    name: \"Stockholders Equity\",\n    icon: Users\n  },\n  revenue: {\n    name: \"Revenues\",\n    icon: PieChart\n  },\n  netIncome: {\n    name: \"Net Income/Loss\",\n    icon: Activity\n  }\n};\nconst limit = pLimit(5); // Limit to 5 concurrent requests\n\nconst FinVueAnalysis = () => {\n  _s();\n  var _selectedCompanies;\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoading(true);\n        const companyTickersResponse = await axios.get(\"http://localhost:5001/api/company-tickers\");\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCompanies();\n  }, []);\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies]);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const newMetricsData = {};\n      const fetchPromises = selectedCompanies.flatMap(company => {\n        const cik = company.cik_str.toString().padStart(10, '0');\n        newMetricsData[company.ticker] = {};\n        return Object.entries(financialMetrics).map(([key, value]) => limit(async () => {\n          try {\n            console.log(`Fetching data for ${company.ticker}, metric: ${value.name}`);\n            const response = await axios.get(`http://localhost:5001/api/company-concept/${cik}/${value.name}`);\n            const data = response.data.units.USD;\n            const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n            const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n            newMetricsData[company.ticker][key] = {\n              tenKData,\n              tenQData\n            };\n          } catch (error) {\n            console.error(`Error fetching data for ${company.ticker}, metric: ${value.name}`, error.message);\n            newMetricsData[company.ticker][key] = {\n              tenKData: [],\n              tenQData: []\n            };\n          }\n        }));\n      });\n      await Promise.all(fetchPromises);\n      setMetricsData(newMetricsData);\n    } catch (error) {\n      console.error(\"Error in fetchData:\", error);\n      setError(\"An error occurred while fetching financial data. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderFinancialOverview = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card financial-overview\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-title\",\n      children: \"Financial Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"financial-grid\",\n      children: Object.entries(financialMetrics).map(([key, {\n        name,\n        icon: Icon\n      }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), \" \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), selectedCompanies.map(company => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"financial-value\",\n          children: [company.title, \":\", metricsData[company.ticker] && metricsData[company.ticker][key] && metricsData[company.ticker][key].tenKData && metricsData[company.ticker][key].tenKData.length > 0 ? `$${metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()}` : 'N/A']\n        }, company.ticker, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n  const renderCharts = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card financial-charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-title\",\n      children: [financialMetrics[selectedMetric].name, \" Trends\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-controls\",\n      children: Object.entries(financialMetrics).map(([key, {\n        name\n      }]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedMetric(key),\n        className: selectedMetric === key ? 'active' : '',\n        children: name\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Annual Data (10-K)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: selectedCompanies.flatMap(company => {\n            var _metricsData$company$, _metricsData$company$2;\n            return (((_metricsData$company$ = metricsData[company.ticker]) === null || _metricsData$company$ === void 0 ? void 0 : (_metricsData$company$2 = _metricsData$company$[selectedMetric]) === null || _metricsData$company$2 === void 0 ? void 0 : _metricsData$company$2.tenKData) || []).map(item => ({\n              ...item,\n              company: company.title\n            }));\n          }),\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"end\",\n            tickFormatter: date => new Date(date).getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            labelFormatter: date => new Date(date).toLocaleDateString(),\n            formatter: value => `$${value.toLocaleString()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"val\",\n            fill: \"#4a5568\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quarterly Data (10-Q)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: selectedCompanies.flatMap(company => {\n            var _metricsData$company$3, _metricsData$company$4;\n            return (((_metricsData$company$3 = metricsData[company.ticker]) === null || _metricsData$company$3 === void 0 ? void 0 : (_metricsData$company$4 = _metricsData$company$3[selectedMetric]) === null || _metricsData$company$4 === void 0 ? void 0 : _metricsData$company$4.tenQData) || []).map(item => ({\n              ...item,\n              company: company.title\n            }));\n          }),\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"end\",\n            tickFormatter: date => new Date(date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            labelFormatter: date => new Date(date).toLocaleDateString(),\n            formatter: value => `$${value.toLocaleString()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"val\",\n            stroke: \"#4a5568\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"finvue-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"main-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: (_selectedCompanies = selectedCompanies[selectedCompanies.length - 1]) === null || _selectedCompanies === void 0 ? void 0 : _selectedCompanies.ticker,\n        onChange: e => {\n          const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n          if (isComparing) {\n            setSelectedCompanies(prev => [...prev, selectedCompany]);\n          } else {\n            setSelectedCompanies([selectedCompany]);\n          }\n        },\n        children: companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company.ticker,\n          children: company.title\n        }, company.ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsComparing(!isComparing),\n        className: \"compare-button\",\n        children: isComparing ? 'Stop Comparing' : 'Compare Companies'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-icons\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bell, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(User, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [renderFinancialOverview(), renderCharts()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(FinVueAnalysis, \"My/jjX1TSdPF1NXYGvMYZdaMNGw=\");\n_c = FinVueAnalysis;\nexport default FinVueAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FinVueAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","DollarSign","TrendingUp","Users","PieChart","Activity","Search","Bell","User","axios","pLimit","jsxDEV","_jsxDEV","financialMetrics","assets","name","icon","liabilities","equity","revenue","netIncome","limit","FinVueAnalysis","_s","_selectedCompanies","selectedMetric","setSelectedMetric","metricsData","setMetricsData","loading","setLoading","error","setError","companyList","setCompanyList","selectedCompanies","setSelectedCompanies","isComparing","setIsComparing","fetchCompanies","companyTickersResponse","get","companyDataArray","Object","values","data","console","length","fetchData","newMetricsData","fetchPromises","flatMap","company","cik","cik_str","toString","padStart","ticker","entries","map","key","value","log","response","units","USD","tenKData","filter","item","form","sort","a","b","Date","end","tenQData","message","Promise","all","renderFinancialOverview","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Icon","size","title","val","toLocaleString","renderCharts","onClick","width","height","_metricsData$company$","_metricsData$company$2","strokeDasharray","dataKey","tickFormatter","date","getFullYear","labelFormatter","toLocaleDateString","formatter","fill","_metricsData$company$3","_metricsData$company$4","type","stroke","onChange","e","selectedCompany","find","c","target","prev","_c","$RefreshReg$"],"sources":["/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { DollarSign, TrendingUp, Users, PieChart, Activity, Search, Bell, User } from 'lucide-react';\nimport axios from 'axios';\nimport pLimit from 'p-limit';\nimport './FinVueAnalysis.css';  // Make sure this CSS file exists and is in the same directory\n\nconst financialMetrics = {\n  assets: { name: \"Assets\", icon: DollarSign },\n  liabilities: { name: \"Liabilities\", icon: TrendingUp },\n  equity: { name: \"Stockholders Equity\", icon: Users },\n  revenue: { name: \"Revenues\", icon: PieChart },\n  netIncome: { name: \"Net Income/Loss\", icon: Activity },\n};\n\nconst limit = pLimit(5); // Limit to 5 concurrent requests\n\nconst FinVueAnalysis = () => {\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoading(true);\n        const companyTickersResponse = await axios.get(\n          \"http://localhost:5001/api/company-tickers\"\n        );\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies]);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const newMetricsData = {};\n\n      const fetchPromises = selectedCompanies.flatMap(company => {\n        const cik = company.cik_str.toString().padStart(10, '0');\n        newMetricsData[company.ticker] = {};\n\n        return Object.entries(financialMetrics).map(([key, value]) =>\n          limit(async () => {\n            try {\n              console.log(`Fetching data for ${company.ticker}, metric: ${value.name}`);\n              const response = await axios.get(\n                `http://localhost:5001/api/company-concept/${cik}/${value.name}`\n              );\n\n              const data = response.data.units.USD;\n              const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n              const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n\n              newMetricsData[company.ticker][key] = { tenKData, tenQData };\n            } catch (error) {\n              console.error(`Error fetching data for ${company.ticker}, metric: ${value.name}`, error.message);\n              newMetricsData[company.ticker][key] = { tenKData: [], tenQData: [] };\n            }\n          })\n        );\n      });\n\n      await Promise.all(fetchPromises);\n      setMetricsData(newMetricsData);\n    } catch (error) {\n      console.error(\"Error in fetchData:\", error);\n      setError(\"An error occurred while fetching financial data. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderFinancialOverview = () => (\n    <div className=\"card financial-overview\">\n      <h2 className=\"card-title\">Financial Overview</h2>\n      <div className=\"financial-grid\">\n        {Object.entries(financialMetrics).map(([key, { name, icon: Icon }]) => (\n          <div key={key} className=\"financial-item\">\n            <h3><Icon size={18} /> {name}</h3>\n            {selectedCompanies.map(company => (\n              <p key={company.ticker} className=\"financial-value\">\n                {company.title}: \n                {metricsData[company.ticker] && \n                 metricsData[company.ticker][key] &&\n                 metricsData[company.ticker][key].tenKData &&\n                 metricsData[company.ticker][key].tenKData.length > 0\n                  ? `$${metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()}`\n                  : 'N/A'}\n              </p>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderCharts = () => (\n    <div className=\"card financial-charts\">\n      <h2 className=\"card-title\">{financialMetrics[selectedMetric].name} Trends</h2>\n      <div className=\"chart-controls\">\n        {Object.entries(financialMetrics).map(([key, { name }]) => (\n          <button\n            key={key}\n            onClick={() => setSelectedMetric(key)}\n            className={selectedMetric === key ? 'active' : ''}\n          >\n            {name}\n          </button>\n        ))}\n      </div>\n      <div className=\"chart-container\">\n        <h3>Annual Data (10-K)</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={selectedCompanies.flatMap(company => \n            (metricsData[company.ticker]?.[selectedMetric]?.tenKData || []).map(item => ({\n              ...item,\n              company: company.title\n            }))\n          )}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).getFullYear()} />\n            <YAxis />\n            <Tooltip\n              labelFormatter={(date) => new Date(date).toLocaleDateString()}\n              formatter={(value) => `$${value.toLocaleString()}`}\n            />\n            <Legend />\n            <Bar dataKey=\"val\" fill=\"#4a5568\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <div className=\"chart-container\">\n        <h3>Quarterly Data (10-Q)</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={selectedCompanies.flatMap(company => \n            (metricsData[company.ticker]?.[selectedMetric]?.tenQData || []).map(item => ({\n              ...item,\n              company: company.title\n            }))\n          )}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).toLocaleDateString()} />\n            <YAxis />\n            <Tooltip\n              labelFormatter={(date) => new Date(date).toLocaleDateString()}\n              formatter={(value) => `$${value.toLocaleString()}`}\n            />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"val\" stroke=\"#4a5568\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"finvue-analysis\">\n      <header className=\"main-header\">\n        <select\n          value={selectedCompanies[selectedCompanies.length - 1]?.ticker}\n          onChange={(e) => {\n            const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n            if (isComparing) {\n              setSelectedCompanies(prev => [...prev, selectedCompany]);\n            } else {\n              setSelectedCompanies([selectedCompany]);\n            }\n          }}\n        >\n          {companyList.map(company => (\n            <option key={company.ticker} value={company.ticker}>\n              {company.title}\n            </option>\n          ))}\n        </select>\n        <button onClick={() => setIsComparing(!isComparing)} className=\"compare-button\">\n          {isComparing ? 'Stop Comparing' : 'Compare Companies'}\n        </button>\n        <div className=\"header-icons\">\n          <Search size={20} />\n          <Bell size={20} />\n          <User size={20} />\n        </div>\n      </header>\n      <div className=\"dashboard-grid\">\n        {renderFinancialOverview()}\n        {renderCharts()}\n      </div>\n    </div>\n  );\n};\n\nexport default FinVueAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}