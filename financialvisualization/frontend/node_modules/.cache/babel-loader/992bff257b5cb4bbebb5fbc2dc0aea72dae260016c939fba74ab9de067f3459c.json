{"ast":null,"code":"var _jsxFileName = \"/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport axios from 'axios';\nimport './FinVueAnalysis.css'; // Make sure to create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"Equity\"\n};\nconst organizeData = data => {\n  const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n  const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n  return {\n    tenKData,\n    tenQData\n  };\n};\nconst FinVueAnalysis = () => {\n  _s();\n  const [selectedData, setSelectedData] = useState('liabilities');\n  const [metricsData, setMetricsData] = useState({\n    tenKData: [],\n    tenQData: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const companyTickersResponse = await axios.get(\"http://localhost:5001/api/company-tickers\");\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompany(companyDataArray[0]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      }\n    };\n    fetchCompanies();\n  }, []);\n  useEffect(() => {\n    if (selectedCompany) {\n      const fetchData = async () => {\n        try {\n          setLoading(true);\n          const cik = selectedCompany.cik_str.toString().padStart(10, '0');\n          const companyConceptResponse = await axios.get(`http://localhost:5001/api/company-concept/${cik}/${financialMetrics[selectedData]}`);\n          const data = companyConceptResponse.data.units.USD;\n          const {\n            tenKData,\n            tenQData\n          } = organizeData(data);\n          console.log('Fetched 10-K Data:', tenKData);\n          console.log('Fetched 10-Q Data:', tenQData);\n          setMetricsData({\n            tenKData,\n            tenQData\n          });\n          setLoading(false);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n          setError(\"An error occurred while fetching financial data. Please try again later.\");\n          setLoading(false);\n        }\n      };\n      fetchData();\n    }\n  }, [selectedCompany, selectedData]);\n  const renderChart = (data, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"end\",\n          tickFormatter: date => new Date(date).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          labelFormatter: date => new Date(date).toLocaleDateString(),\n          formatter: value => `$${value.toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"val\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: [\"Stock Analysis: \", selectedCompany === null || selectedCompany === void 0 ? void 0 : selectedCompany.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedCompany === null || selectedCompany === void 0 ? void 0 : selectedCompany.ticker,\n        onChange: e => setSelectedCompany(companyList.find(c => c.ticker === e.target.value)),\n        children: companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company.ticker,\n          children: company.title\n        }, company.ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Data Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2 mb-4\",\n          children: Object.keys(financialMetrics).map(metric => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedData === metric ? 'default' : 'outline',\n            onClick: () => setSelectedData(metric),\n            children: financialMetrics[metric]\n          }, metric, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), renderChart(metricsData.tenKData, \"10-K Data\"), renderChart(metricsData.tenQData, \"10-Q Data\"), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"Avg. \", financialMetrics[selectedData], \": $\", (metricsData.tenQData.concat(metricsData.tenKData).reduce((sum, item) => sum + item.val, 0) / (metricsData.tenQData.length + metricsData.tenKData.length)).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(FinVueAnalysis, \"+/gMZvylRXq0U+XvJ9pjl4WfBrE=\");\n_c = FinVueAnalysis;\nexport default FinVueAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FinVueAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Card","CardContent","Button","Select","axios","jsxDEV","_jsxDEV","financialMetrics","assets","liabilities","equity","organizeData","data","tenKData","filter","item","form","sort","a","b","Date","end","tenQData","FinVueAnalysis","_s","selectedData","setSelectedData","metricsData","setMetricsData","loading","setLoading","error","setError","companyList","setCompanyList","selectedCompany","setSelectedCompany","fetchCompanies","companyTickersResponse","get","companyDataArray","Object","values","console","fetchData","cik","cik_str","toString","padStart","companyConceptResponse","units","USD","log","renderChart","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","tickFormatter","date","toLocaleDateString","labelFormatter","formatter","value","toLocaleString","fill","ticker","onChange","e","find","c","target","map","company","keys","metric","variant","onClick","concat","reduce","sum","val","length","_c","$RefreshReg$"],"sources":["/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport axios from 'axios';\nimport './FinVueAnalysis.css'; // Make sure to create this CSS file\n\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"Equity\",\n};\n\nconst organizeData = (data) => {\n  const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n  const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n  \n  return { tenKData, tenQData };\n};\n\nconst FinVueAnalysis = () => {\n  const [selectedData, setSelectedData] = useState('liabilities');\n  const [metricsData, setMetricsData] = useState({ tenKData: [], tenQData: [] });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const companyTickersResponse = await axios.get(\n          \"http://localhost:5001/api/company-tickers\"\n        );\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompany(companyDataArray[0]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCompany) {\n      const fetchData = async () => {\n        try {\n          setLoading(true);\n          const cik = selectedCompany.cik_str.toString().padStart(10, '0');\n\n          const companyConceptResponse = await axios.get(\n            `http://localhost:5001/api/company-concept/${cik}/${financialMetrics[selectedData]}`\n          );\n\n          const data = companyConceptResponse.data.units.USD;\n          const { tenKData, tenQData } = organizeData(data);\n          \n          console.log('Fetched 10-K Data:', tenKData);\n          console.log('Fetched 10-Q Data:', tenQData);\n\n          setMetricsData({ tenKData, tenQData });\n          setLoading(false);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n          setError(\"An error occurred while fetching financial data. Please try again later.\");\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    }\n  }, [selectedCompany, selectedData]);\n\n  const renderChart = (data, title) => (\n    <div className=\"chart-container\">\n      <h3>{title}</h3>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).toLocaleDateString()} />\n          <YAxis />\n          <Tooltip\n            labelFormatter={(date) => new Date(date).toLocaleDateString()}\n            formatter={(value) => `$${value.toLocaleString()}`}\n          />\n          <Bar dataKey=\"val\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div className=\"p-4\">\n      <header className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">Stock Analysis: {selectedCompany?.title}</h1>\n        <Select\n          value={selectedCompany?.ticker}\n          onChange={(e) => setSelectedCompany(companyList.find(c => c.ticker === e.target.value))}\n        >\n          {companyList.map(company => (\n            <option key={company.ticker} value={company.ticker}>\n              {company.title}\n            </option>\n          ))}\n        </Select>\n      </header>\n\n      <Card>\n        <CardContent>\n          <h2 className=\"text-xl font-semibold mb-4\">Data Overview</h2>\n          <div className=\"flex space-x-2 mb-4\">\n            {Object.keys(financialMetrics).map(metric => (\n              <Button\n                key={metric}\n                variant={selectedData === metric ? 'default' : 'outline'}\n                onClick={() => setSelectedData(metric)}\n              >\n                {financialMetrics[metric]}\n              </Button>\n            ))}\n          </div>\n          {renderChart(metricsData.tenKData, \"10-K Data\")}\n          {renderChart(metricsData.tenQData, \"10-Q Data\")}\n          <div className=\"text-center mt-4\">\n            <span className=\"text-sm text-gray-500\">\n              Avg. {financialMetrics[selectedData]}: ${(metricsData.tenQData.concat(metricsData.tenKData).reduce((sum, item) => sum + item.val, 0) / (metricsData.tenQData.length + metricsData.tenKData.length)).toLocaleString()}\n            </span>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default FinVueAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}