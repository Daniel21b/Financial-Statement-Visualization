{"ast":null,"code":"var _jsxFileName = \"/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport { Home, Users, LogOut, FileText, User } from 'lucide-react';\nimport axios from 'axios';\nimport pLimit from 'p-limit';\nimport './FinVueAnalysis.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"StockholdersEquity\",\n  revenue: \"Revenues\",\n  netIncome: \"NetIncomeLoss\"\n};\nconst limit = pLimit(5);\nconst FinVueAnalysis = () => {\n  _s();\n  var _selectedCompanies;\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoading(true);\n        const companyTickersResponse = await axios.get(\"http://localhost:5001/api/company-tickers\");\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCompanies();\n  }, []);\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const newMetricsData = {};\n      const fetchPromises = selectedCompanies.flatMap(company => {\n        const cik = company.cik_str.toString().padStart(10, '0');\n        newMetricsData[company.ticker] = {};\n        return Object.entries(financialMetrics).map(([key, value]) => limit(async () => {\n          try {\n            console.log(`Fetching data for ${company.ticker}, metric: ${value}`);\n            const response = await axios.get(`http://localhost:5001/api/company-concept/${cik}/${value}`);\n            const data = response.data.units.USD;\n            const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n            const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n            newMetricsData[company.ticker][key] = {\n              tenKData,\n              tenQData\n            };\n          } catch (error) {\n            console.error(`Error fetching data for ${company.ticker}, metric: ${value}`, error.message);\n            newMetricsData[company.ticker][key] = {\n              tenKData: [],\n              tenQData: []\n            };\n          }\n        }));\n      });\n      await Promise.all(fetchPromises);\n      setMetricsData(newMetricsData);\n    } catch (error) {\n      console.error(\"Error in fetchData:\", error);\n      setError(\"An error occurred while fetching financial data. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedCompanies]);\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies, fetchData]);\n  const fetchNews = async () => {\n    try {\n      const response = await axios.get('https://api.marketaux.com/v1/news/all', {\n        params: {\n          countries: 'us',\n          filter_entities: true,\n          limit: 10,\n          published_after: '2024-07-29T21:56',\n          api_token: 'eM6ilsiHpSR7PiBPONMooaKNeP3Ks7WzSKYYbfKy'\n        }\n      });\n      setNews(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n    }\n  };\n  const renderFinancialOverview = () => /*#__PURE__*/_jsxDEV(Card, {\n    className: \"financial-overview\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Financial Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-grid\",\n        children: Object.entries(financialMetrics).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"financial-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), selectedCompanies.map(company => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"financial-value\",\n            children: [company.title, \":\", metricsData[company.ticker] && metricsData[company.ticker][key] && metricsData[company.ticker][key].tenKData && metricsData[company.ticker][key].tenKData.length > 0 ? `$${metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()}` : 'N/A']\n          }, company.ticker, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n  const renderCharts = () => {\n    const getChartData = (data, metric) => data.map(item => ({\n      end: new Date(item.end).toISOString().split('T')[0],\n      value: item.val\n    }));\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"financial-charts\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [financialMetrics[selectedMetric], \" Trends\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-controls\",\n          children: Object.entries(financialMetrics).map(([key, value]) => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setSelectedMetric(key),\n            className: selectedMetric === key ? 'active' : '',\n            children: value\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Annual Data (10-K)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: selectedCompanies.flatMap(company => {\n                var _metricsData$company$, _metricsData$company$2;\n                return getChartData(((_metricsData$company$ = metricsData[company.ticker]) === null || _metricsData$company$ === void 0 ? void 0 : (_metricsData$company$2 = _metricsData$company$[selectedMetric]) === null || _metricsData$company$2 === void 0 ? void 0 : _metricsData$company$2.tenKData) || [], selectedMetric);\n              }),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"end\",\n                tickFormatter: date => new Date(date).getFullYear()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                labelFormatter: date => new Date(date).toLocaleDateString(),\n                formatter: value => `$${value.toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), selectedCompanies.map(company => /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"value\",\n                name: company.title,\n                fill: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n              }, company.ticker, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Quarterly Data (10-Q)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: selectedCompanies.flatMap(company => {\n                var _metricsData$company$3, _metricsData$company$4;\n                return getChartData(((_metricsData$company$3 = metricsData[company.ticker]) === null || _metricsData$company$3 === void 0 ? void 0 : (_metricsData$company$4 = _metricsData$company$3[selectedMetric]) === null || _metricsData$company$4 === void 0 ? void 0 : _metricsData$company$4.tenQData) || [], selectedMetric);\n              }),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"end\",\n                tickFormatter: date => new Date(date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                labelFormatter: date => new Date(date).toLocaleDateString(),\n                formatter: value => `$${value.toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), selectedCompanies.map(company => /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"value\",\n                name: company.title,\n                stroke: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n              }, company.ticker, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCompanyChange = e => {\n    const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n    if (isComparing) {\n      setSelectedCompanies(prev => [...prev, selectedCompany]);\n    } else {\n      setSelectedCompanies([selectedCompany]);\n    }\n  };\n  const toggleComparison = () => {\n    setIsComparing(!isComparing);\n    if (!isComparing) {\n      setSelectedCompanies(prev => [prev[0]]);\n    }\n  };\n  const renderNews = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Latest News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"finvue-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FinVue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"active\",\n            children: [/*#__PURE__*/_jsxDEV(Home, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 36\n            }, this), \" Dashboard\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: toggleComparison,\n            children: [/*#__PURE__*/_jsxDEV(Users, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 44\n            }, this), \" \", isComparing ? 'Stop Comparing' : 'Compare Companies']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: fetchNews,\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this), \" Fetch News\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout\",\n        children: [/*#__PURE__*/_jsxDEV(LogOut, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), \" Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"main-header\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: (_selectedCompanies = selectedCompanies[selectedCompanies.length - 1]) === null || _selectedCompanies === void 0 ? void 0 : _selectedCompanies.ticker,\n          onChange: handleCompanyChange,\n          children: companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.ticker,\n            children: company.title\n          }, company.ticker, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-icons\",\n          children: /*#__PURE__*/_jsxDEV(User, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [renderFinancialOverview(), renderCharts(), news.length > 0 && renderNews()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(FinVueAnalysis, \"PMnBQyUEV14MDF37AMiSg7TE0NE=\");\n_c = FinVueAnalysis;\nexport default FinVueAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FinVueAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","Card","CardContent","Button","Select","Home","Users","LogOut","FileText","User","axios","pLimit","jsxDEV","_jsxDEV","financialMetrics","assets","liabilities","equity","revenue","netIncome","limit","FinVueAnalysis","_s","_selectedCompanies","selectedMetric","setSelectedMetric","metricsData","setMetricsData","loading","setLoading","error","setError","companyList","setCompanyList","selectedCompanies","setSelectedCompanies","isComparing","setIsComparing","news","setNews","fetchCompanies","companyTickersResponse","get","companyDataArray","Object","values","data","console","fetchData","newMetricsData","fetchPromises","flatMap","company","cik","cik_str","toString","padStart","ticker","entries","map","key","value","log","response","units","USD","tenKData","filter","item","form","sort","a","b","Date","end","tenQData","message","Promise","all","length","fetchNews","params","countries","filter_entities","published_after","api_token","renderFinancialOverview","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","val","toLocaleString","renderCharts","getChartData","metric","toISOString","split","onClick","width","height","_metricsData$company$","_metricsData$company$2","strokeDasharray","dataKey","tickFormatter","date","getFullYear","labelFormatter","toLocaleDateString","formatter","name","fill","Math","floor","random","_metricsData$company$3","_metricsData$company$4","type","stroke","handleCompanyChange","e","selectedCompany","find","c","target","prev","toggleComparison","renderNews","index","href","url","rel","size","onChange","_c","$RefreshReg$"],"sources":["/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport { Home, Users, LogOut, FileText, User } from 'lucide-react';\nimport axios from 'axios';\nimport pLimit from 'p-limit';\nimport './FinVueAnalysis.css';\n\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"StockholdersEquity\",\n  revenue: \"Revenues\",\n  netIncome: \"NetIncomeLoss\",\n};\n\nconst limit = pLimit(5);\n\nconst FinVueAnalysis = () => {\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n  const [news, setNews] = useState([]);\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoading(true);\n        const companyTickersResponse = await axios.get(\n          \"http://localhost:5001/api/company-tickers\"\n        );\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const newMetricsData = {};\n\n      const fetchPromises = selectedCompanies.flatMap(company => {\n        const cik = company.cik_str.toString().padStart(10, '0');\n        newMetricsData[company.ticker] = {};\n\n        return Object.entries(financialMetrics).map(([key, value]) =>\n          limit(async () => {\n            try {\n              console.log(`Fetching data for ${company.ticker}, metric: ${value}`);\n              const response = await axios.get(\n                `http://localhost:5001/api/company-concept/${cik}/${value}`\n              );\n\n              const data = response.data.units.USD;\n              const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n              const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n\n              newMetricsData[company.ticker][key] = { tenKData, tenQData };\n            } catch (error) {\n              console.error(`Error fetching data for ${company.ticker}, metric: ${value}`, error.message);\n              newMetricsData[company.ticker][key] = { tenKData: [], tenQData: [] };\n            }\n          })\n        );\n      });\n\n      await Promise.all(fetchPromises);\n      setMetricsData(newMetricsData);\n    } catch (error) {\n      console.error(\"Error in fetchData:\", error);\n      setError(\"An error occurred while fetching financial data. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedCompanies]);\n\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies, fetchData]);\n\n  const fetchNews = async () => {\n    try {\n      const response = await axios.get('https://api.marketaux.com/v1/news/all', {\n        params: {\n          countries: 'us',\n          filter_entities: true,\n          limit: 10,\n          published_after: '2024-07-29T21:56',\n          api_token: 'eM6ilsiHpSR7PiBPONMooaKNeP3Ks7WzSKYYbfKy'\n        }\n      });\n      setNews(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n    }\n  };\n\n  const renderFinancialOverview = () => (\n    <Card className=\"financial-overview\">\n      <CardContent>\n        <h2>Financial Overview</h2>\n        <div className=\"financial-grid\">\n          {Object.entries(financialMetrics).map(([key, value]) => (\n            <div key={key} className=\"financial-item\">\n              <h3>{value}</h3>\n              {selectedCompanies.map(company => (\n                <p key={company.ticker} className=\"financial-value\">\n                  {company.title}: \n                  {metricsData[company.ticker] && \n                   metricsData[company.ticker][key] &&\n                   metricsData[company.ticker][key].tenKData &&\n                   metricsData[company.ticker][key].tenKData.length > 0\n                    ? `$${metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()}`\n                    : 'N/A'}\n                </p>\n              ))}\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const renderCharts = () => {\n    const getChartData = (data, metric) => data.map(item => ({\n      end: new Date(item.end).toISOString().split('T')[0],\n      value: item.val,\n    }));\n\n    return (\n      <Card className=\"financial-charts\">\n        <CardContent>\n          <h2>{financialMetrics[selectedMetric]} Trends</h2>\n          <div className=\"chart-controls\">\n            {Object.entries(financialMetrics).map(([key, value]) => (\n              <Button\n                key={key}\n                onClick={() => setSelectedMetric(key)}\n                className={selectedMetric === key ? 'active' : ''}\n              >\n                {value}\n              </Button>\n            ))}\n          </div>\n          <div className=\"chart-container\">\n            <h3>Annual Data (10-K)</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={selectedCompanies.flatMap(company => getChartData(metricsData[company.ticker]?.[selectedMetric]?.tenKData || [], selectedMetric))}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).getFullYear()} />\n                <YAxis />\n                <Tooltip\n                  labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                  formatter={(value) => `$${value.toLocaleString()}`}\n                />\n                <Legend />\n                {selectedCompanies.map(company => (\n                  <Bar\n                    key={company.ticker}\n                    dataKey=\"value\"\n                    name={company.title}\n                    fill={`#${Math.floor(Math.random() * 16777215).toString(16)}`}\n                  />\n                ))}\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"chart-container\">\n            <h3>Quarterly Data (10-Q)</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={selectedCompanies.flatMap(company => getChartData(metricsData[company.ticker]?.[selectedMetric]?.tenQData || [], selectedMetric))}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).toLocaleDateString()} />\n                <YAxis />\n                <Tooltip\n                  labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                  formatter={(value) => `$${value.toLocaleString()}`}\n                />\n                <Legend />\n                {selectedCompanies.map(company => (\n                  <Line\n                    key={company.ticker}\n                    type=\"monotone\"\n                    dataKey=\"value\"\n                    name={company.title}\n                    stroke={`#${Math.floor(Math.random() * 16777215).toString(16)}`}\n                  />\n                ))}\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const handleCompanyChange = (e) => {\n    const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n    if (isComparing) {\n      setSelectedCompanies(prev => [...prev, selectedCompany]);\n    } else {\n      setSelectedCompanies([selectedCompany]);\n    }\n  };\n\n  const toggleComparison = () => {\n    setIsComparing(!isComparing);\n    if (!isComparing) {\n      setSelectedCompanies(prev => [prev[0]]);\n    }\n  };\n\n  const renderNews = () => (\n    <div className=\"news-section\">\n      <h3>Latest News</h3>\n      <ul>\n        {news.map((item, index) => (\n          <li key={index}>\n            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"finvue-analysis\">\n      <aside className=\"sidebar\">\n        <h1>FinVue</h1>\n        <nav>\n          <ul>\n            <li className=\"active\"><Home size={18} /> Dashboard</li>\n            <li onClick={toggleComparison}><Users size={18} /> {isComparing ? 'Stop Comparing' : 'Compare Companies'}</li>\n            <li onClick={fetchNews}><FileText size={18} /> Fetch News</li>\n          </ul>\n        </nav>\n        <div className=\"logout\">\n          <LogOut size={18} /> Logout\n        </div>\n      </aside>\n      <main className=\"main-content\">\n        <header className=\"main-header\">\n          <Select\n            value={selectedCompanies[selectedCompanies.length - 1]?.ticker}\n            onChange={handleCompanyChange}\n          >\n            {companyList.map(company => (\n              <option key={company.ticker} value={company.ticker}>\n                {company.title}\n              </option>\n            ))}\n          </Select>\n          <div className=\"header-icons\">\n            <User size={20} />\n          </div>\n        </header>\n        <div className=\"dashboard-grid\">\n          {renderFinancialOverview()}\n          {renderCharts()}\n          {news.length > 0 && renderNews()}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default FinVueAnalysis;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,QAAQ,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,UAAU;AAC5H,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,cAAc;AAClE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,SAAS;AAC5B,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,gBAAgB,GAAG;EACvBC,MAAM,EAAE,QAAQ;EAChBC,WAAW,EAAE,aAAa;EAC1BC,MAAM,EAAE,oBAAoB;EAC5BC,OAAO,EAAE,UAAU;EACnBC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,KAAK,GAAGT,MAAM,CAAC,CAAC,CAAC;AAEvB,MAAMU,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrC,QAAQ,CAAC,QAAQ,CAAC;EAC9D,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0C,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACgD,WAAW,EAAEC,cAAc,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkD,IAAI,EAAEC,OAAO,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMmD,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACFX,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMY,sBAAsB,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAC5C,2CACF,CAAC;QACD,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAACJ,sBAAsB,CAACK,IAAI,CAAC;QACnEb,cAAc,CAACU,gBAAgB,CAAC;QAChCR,oBAAoB,CAAC,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7C,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdiB,OAAO,CAACjB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,wEAAwE,CAAC;MACpF,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDW,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,SAAS,GAAG1D,WAAW,CAAC,YAAY;IACxC,IAAI;MACFuC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMoB,cAAc,GAAG,CAAC,CAAC;MAEzB,MAAMC,aAAa,GAAGhB,iBAAiB,CAACiB,OAAO,CAACC,OAAO,IAAI;QACzD,MAAMC,GAAG,GAAGD,OAAO,CAACE,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC;QACxDP,cAAc,CAACG,OAAO,CAACK,MAAM,CAAC,GAAG,CAAC,CAAC;QAEnC,OAAOb,MAAM,CAACc,OAAO,CAAC5C,gBAAgB,CAAC,CAAC6C,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KACvDzC,KAAK,CAAC,YAAY;UAChB,IAAI;YACF2B,OAAO,CAACe,GAAG,CAAC,qBAAqBV,OAAO,CAACK,MAAM,aAAaI,KAAK,EAAE,CAAC;YACpE,MAAME,QAAQ,GAAG,MAAMrD,KAAK,CAACgC,GAAG,CAC9B,6CAA6CW,GAAG,IAAIQ,KAAK,EAC3D,CAAC;YAED,MAAMf,IAAI,GAAGiB,QAAQ,CAACjB,IAAI,CAACkB,KAAK,CAACC,GAAG;YACpC,MAAMC,QAAQ,GAAGpB,IAAI,CAACqB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,GAAG,CAAC,CAAC;YAC5G,MAAMC,QAAQ,GAAG7B,IAAI,CAACqB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,GAAG,CAAC,CAAC;YAE5GzB,cAAc,CAACG,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,GAAG;cAAEM,QAAQ;cAAES;YAAS,CAAC;UAC9D,CAAC,CAAC,OAAO7C,KAAK,EAAE;YACdiB,OAAO,CAACjB,KAAK,CAAC,2BAA2BsB,OAAO,CAACK,MAAM,aAAaI,KAAK,EAAE,EAAE/B,KAAK,CAAC8C,OAAO,CAAC;YAC3F3B,cAAc,CAACG,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,GAAG;cAAEM,QAAQ,EAAE,EAAE;cAAES,QAAQ,EAAE;YAAG,CAAC;UACtE;QACF,CAAC,CACH,CAAC;MACH,CAAC,CAAC;MAEF,MAAME,OAAO,CAACC,GAAG,CAAC5B,aAAa,CAAC;MAChCvB,cAAc,CAACsB,cAAc,CAAC;IAChC,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdiB,OAAO,CAACjB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,0EAA0E,CAAC;IACtF,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACK,iBAAiB,CAAC,CAAC;EAEvB7C,SAAS,CAAC,MAAM;IACd,IAAI6C,iBAAiB,CAAC6C,MAAM,GAAG,CAAC,EAAE;MAChC/B,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACd,iBAAiB,EAAEc,SAAS,CAAC,CAAC;EAElC,MAAMgC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMrD,KAAK,CAACgC,GAAG,CAAC,uCAAuC,EAAE;QACxEuC,MAAM,EAAE;UACNC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,IAAI;UACrB/D,KAAK,EAAE,EAAE;UACTgE,eAAe,EAAE,kBAAkB;UACnCC,SAAS,EAAE;QACb;MACF,CAAC,CAAC;MACF9C,OAAO,CAACwB,QAAQ,CAACjB,IAAI,CAACA,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdiB,OAAO,CAACjB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMwD,uBAAuB,GAAGA,CAAA,kBAC9BzE,OAAA,CAACZ,IAAI;IAACsF,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eAClC3E,OAAA,CAACX,WAAW;MAAAsF,QAAA,gBACV3E,OAAA;QAAA2E,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B/E,OAAA;QAAK0E,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5B5C,MAAM,CAACc,OAAO,CAAC5C,gBAAgB,CAAC,CAAC6C,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACjDhD,OAAA;UAAe0E,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBACvC3E,OAAA;YAAA2E,QAAA,EAAK3B;UAAK;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACf1D,iBAAiB,CAACyB,GAAG,CAACP,OAAO,iBAC5BvC,OAAA;YAAwB0E,SAAS,EAAC,iBAAiB;YAAAC,QAAA,GAChDpC,OAAO,CAACyC,KAAK,EAAC,GACf,EAACnE,WAAW,CAAC0B,OAAO,CAACK,MAAM,CAAC,IAC3B/B,WAAW,CAAC0B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,IAChClC,WAAW,CAAC0B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,CAACM,QAAQ,IACzCxC,WAAW,CAAC0B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,CAACM,QAAQ,CAACa,MAAM,GAAG,CAAC,GACjD,IAAIrD,WAAW,CAAC0B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,CAACM,QAAQ,CAACxC,WAAW,CAAC0B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,CAACM,QAAQ,CAACa,MAAM,GAAG,CAAC,CAAC,CAACe,GAAG,CAACC,cAAc,CAAC,CAAC,EAAE,GAC1H,KAAK;UAAA,GAPH3C,OAAO,CAACK,MAAM;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQnB,CACJ,CAAC;QAAA,GAZMhC,GAAG;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaR,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CACP;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAGA,CAACnD,IAAI,EAAEoD,MAAM,KAAKpD,IAAI,CAACa,GAAG,CAACS,IAAI,KAAK;MACvDM,GAAG,EAAE,IAAID,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,CAACyB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnDvC,KAAK,EAAEO,IAAI,CAAC0B;IACd,CAAC,CAAC,CAAC;IAEH,oBACEjF,OAAA,CAACZ,IAAI;MAACsF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAChC3E,OAAA,CAACX,WAAW;QAAAsF,QAAA,gBACV3E,OAAA;UAAA2E,QAAA,GAAK1E,gBAAgB,CAACU,cAAc,CAAC,EAAC,SAAO;QAAA;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClD/E,OAAA;UAAK0E,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5B5C,MAAM,CAACc,OAAO,CAAC5C,gBAAgB,CAAC,CAAC6C,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACjDhD,OAAA,CAACV,MAAM;YAELkG,OAAO,EAAEA,CAAA,KAAM5E,iBAAiB,CAACmC,GAAG,CAAE;YACtC2B,SAAS,EAAE/D,cAAc,KAAKoC,GAAG,GAAG,QAAQ,GAAG,EAAG;YAAA4B,QAAA,EAEjD3B;UAAK,GAJDD,GAAG;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKF,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/E,OAAA;UAAK0E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B3E,OAAA;YAAA2E,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3B/E,OAAA,CAACd,mBAAmB;YAACuG,KAAK,EAAC,MAAM;YAACC,MAAM,EAAE,GAAI;YAAAf,QAAA,eAC5C3E,OAAA,CAACtB,QAAQ;cAACuD,IAAI,EAAEZ,iBAAiB,CAACiB,OAAO,CAACC,OAAO;gBAAA,IAAAoD,qBAAA,EAAAC,sBAAA;gBAAA,OAAIR,YAAY,CAAC,EAAAO,qBAAA,GAAA9E,WAAW,CAAC0B,OAAO,CAACK,MAAM,CAAC,cAAA+C,qBAAA,wBAAAC,sBAAA,GAA3BD,qBAAA,CAA8BhF,cAAc,CAAC,cAAAiF,sBAAA,uBAA7CA,sBAAA,CAA+CvC,QAAQ,KAAI,EAAE,EAAE1C,cAAc,CAAC;cAAA,EAAE;cAAAgE,QAAA,gBAChJ3E,OAAA,CAAChB,aAAa;gBAAC6G,eAAe,EAAC;cAAK;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvC/E,OAAA,CAAClB,KAAK;gBAACgH,OAAO,EAAC,KAAK;gBAACC,aAAa,EAAGC,IAAI,IAAK,IAAIpC,IAAI,CAACoC,IAAI,CAAC,CAACC,WAAW,CAAC;cAAE;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC9E/E,OAAA,CAACjB,KAAK;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACT/E,OAAA,CAACf,OAAO;gBACNiH,cAAc,EAAGF,IAAI,IAAK,IAAIpC,IAAI,CAACoC,IAAI,CAAC,CAACG,kBAAkB,CAAC,CAAE;gBAC9DC,SAAS,EAAGpD,KAAK,IAAK,IAAIA,KAAK,CAACkC,cAAc,CAAC,CAAC;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,eACF/E,OAAA,CAACb,MAAM;gBAAAyF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACT1D,iBAAiB,CAACyB,GAAG,CAACP,OAAO,iBAC5BvC,OAAA,CAACrB,GAAG;gBAEFmH,OAAO,EAAC,OAAO;gBACfO,IAAI,EAAE9D,OAAO,CAACyC,KAAM;gBACpBsB,IAAI,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC/D,QAAQ,CAAC,EAAE,CAAC;cAAG,GAHzDH,OAAO,CAACK,MAAM;gBAAAgC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIpB,CACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACN/E,OAAA;UAAK0E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B3E,OAAA;YAAA2E,QAAA,EAAI;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9B/E,OAAA,CAACd,mBAAmB;YAACuG,KAAK,EAAC,MAAM;YAACC,MAAM,EAAE,GAAI;YAAAf,QAAA,eAC5C3E,OAAA,CAACpB,SAAS;cAACqD,IAAI,EAAEZ,iBAAiB,CAACiB,OAAO,CAACC,OAAO;gBAAA,IAAAmE,sBAAA,EAAAC,sBAAA;gBAAA,OAAIvB,YAAY,CAAC,EAAAsB,sBAAA,GAAA7F,WAAW,CAAC0B,OAAO,CAACK,MAAM,CAAC,cAAA8D,sBAAA,wBAAAC,sBAAA,GAA3BD,sBAAA,CAA8B/F,cAAc,CAAC,cAAAgG,sBAAA,uBAA7CA,sBAAA,CAA+C7C,QAAQ,KAAI,EAAE,EAAEnD,cAAc,CAAC;cAAA,EAAE;cAAAgE,QAAA,gBACjJ3E,OAAA,CAAChB,aAAa;gBAAC6G,eAAe,EAAC;cAAK;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvC/E,OAAA,CAAClB,KAAK;gBAACgH,OAAO,EAAC,KAAK;gBAACC,aAAa,EAAGC,IAAI,IAAK,IAAIpC,IAAI,CAACoC,IAAI,CAAC,CAACG,kBAAkB,CAAC;cAAE;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACrF/E,OAAA,CAACjB,KAAK;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACT/E,OAAA,CAACf,OAAO;gBACNiH,cAAc,EAAGF,IAAI,IAAK,IAAIpC,IAAI,CAACoC,IAAI,CAAC,CAACG,kBAAkB,CAAC,CAAE;gBAC9DC,SAAS,EAAGpD,KAAK,IAAK,IAAIA,KAAK,CAACkC,cAAc,CAAC,CAAC;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,eACF/E,OAAA,CAACb,MAAM;gBAAAyF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACT1D,iBAAiB,CAACyB,GAAG,CAACP,OAAO,iBAC5BvC,OAAA,CAACnB,IAAI;gBAEH+H,IAAI,EAAC,UAAU;gBACfd,OAAO,EAAC,OAAO;gBACfO,IAAI,EAAE9D,OAAO,CAACyC,KAAM;gBACpB6B,MAAM,EAAE,IAAIN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC/D,QAAQ,CAAC,EAAE,CAAC;cAAG,GAJ3DH,OAAO,CAACK,MAAM;gBAAAgC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKpB,CACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEX,CAAC;EAED,MAAM+B,mBAAmB,GAAIC,CAAC,IAAK;IACjC,MAAMC,eAAe,GAAG7F,WAAW,CAAC8F,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACtE,MAAM,KAAKmE,CAAC,CAACI,MAAM,CAACnE,KAAK,CAAC;IAC1E,IAAIzB,WAAW,EAAE;MACfD,oBAAoB,CAAC8F,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,eAAe,CAAC,CAAC;IAC1D,CAAC,MAAM;MACL1F,oBAAoB,CAAC,CAAC0F,eAAe,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7B7F,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5B,IAAI,CAACA,WAAW,EAAE;MAChBD,oBAAoB,CAAC8F,IAAI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,kBACjBtH,OAAA;IAAK0E,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B3E,OAAA;MAAA2E,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB/E,OAAA;MAAA2E,QAAA,EACGlD,IAAI,CAACqB,GAAG,CAAC,CAACS,IAAI,EAAEgE,KAAK,kBACpBvH,OAAA;QAAA2E,QAAA,eACE3E,OAAA;UAAGwH,IAAI,EAAEjE,IAAI,CAACkE,GAAI;UAACN,MAAM,EAAC,QAAQ;UAACO,GAAG,EAAC,qBAAqB;UAAA/C,QAAA,EAAEpB,IAAI,CAACyB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADtEwC,KAAK;QAAA3C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CACN;EAED,IAAIhE,OAAO,EAAE,oBAAOf,OAAA;IAAK0E,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC7D,IAAI9D,KAAK,EAAE,oBAAOjB,OAAA;IAAK0E,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAE1D;EAAK;IAAA2D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEtD,oBACE/E,OAAA;IAAK0E,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B3E,OAAA;MAAO0E,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACxB3E,OAAA;QAAA2E,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf/E,OAAA;QAAA2E,QAAA,eACE3E,OAAA;UAAA2E,QAAA,gBACE3E,OAAA;YAAI0E,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBAAC3E,OAAA,CAACR,IAAI;cAACmI,IAAI,EAAE;YAAG;cAAA/C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,cAAU;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxD/E,OAAA;YAAIwF,OAAO,EAAE6B,gBAAiB;YAAA1C,QAAA,gBAAC3E,OAAA,CAACP,KAAK;cAACkI,IAAI,EAAE;YAAG;cAAA/C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,EAACxD,WAAW,GAAG,gBAAgB,GAAG,mBAAmB;UAAA;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9G/E,OAAA;YAAIwF,OAAO,EAAErB,SAAU;YAAAQ,QAAA,gBAAC3E,OAAA,CAACL,QAAQ;cAACgI,IAAI,EAAE;YAAG;cAAA/C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAAW;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACN/E,OAAA;QAAK0E,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB3E,OAAA,CAACN,MAAM;UAACiI,IAAI,EAAE;QAAG;UAAA/C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,WACtB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACR/E,OAAA;MAAM0E,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC5B3E,OAAA;QAAQ0E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC7B3E,OAAA,CAACT,MAAM;UACLyD,KAAK,GAAAtC,kBAAA,GAAEW,iBAAiB,CAACA,iBAAiB,CAAC6C,MAAM,GAAG,CAAC,CAAC,cAAAxD,kBAAA,uBAA/CA,kBAAA,CAAiDkC,MAAO;UAC/DgF,QAAQ,EAAEd,mBAAoB;UAAAnC,QAAA,EAE7BxD,WAAW,CAAC2B,GAAG,CAACP,OAAO,iBACtBvC,OAAA;YAA6BgD,KAAK,EAAET,OAAO,CAACK,MAAO;YAAA+B,QAAA,EAChDpC,OAAO,CAACyC;UAAK,GADHzC,OAAO,CAACK,MAAM;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEnB,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACT/E,OAAA;UAAK0E,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3B3E,OAAA,CAACJ,IAAI;YAAC+H,IAAI,EAAE;UAAG;YAAA/C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACT/E,OAAA;QAAK0E,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BF,uBAAuB,CAAC,CAAC,EACzBU,YAAY,CAAC,CAAC,EACd1D,IAAI,CAACyC,MAAM,GAAG,CAAC,IAAIoD,UAAU,CAAC,CAAC;MAAA;QAAA1C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtE,EAAA,CAxQID,cAAc;AAAAqH,EAAA,GAAdrH,cAAc;AA0QpB,eAAeA,cAAc;AAAC,IAAAqH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}