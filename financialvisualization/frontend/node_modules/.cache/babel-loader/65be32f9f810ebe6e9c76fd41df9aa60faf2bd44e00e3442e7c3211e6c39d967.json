{"ast":null,"code":"var _jsxFileName = \"/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport axios from 'axios';\nimport './FinVueAnalysis.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"Stockholders' Equity\",\n  revenue: \"Revenue\",\n  netIncome: \"Net Income\"\n};\nconst FinVueAnalysis = () => {\n  _s();\n  var _selectedCompanies;\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const companyTickersResponse = await axios.get(\"http://localhost:5001/api/company-tickers\");\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      }\n    };\n    fetchCompanies();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const newMetricsData = {};\n        for (const company of selectedCompanies) {\n          const cik = company.cik_str.toString().padStart(10, '0');\n          newMetricsData[company.ticker] = {};\n          for (const metric of Object.keys(financialMetrics)) {\n            const response = await axios.get(`http://localhost:5001/api/company-concept/${cik}/${financialMetrics[metric]}`);\n            const data = response.data.units.USD;\n            const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n            const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n            newMetricsData[company.ticker][metric] = {\n              tenKData,\n              tenQData\n            };\n          }\n        }\n        setMetricsData(newMetricsData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setError(\"An error occurred while fetching financial data. Please try again later.\");\n        setLoading(false);\n      }\n    };\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies]);\n  const renderFinancialOverview = () => /*#__PURE__*/_jsxDEV(Card, {\n    className: \"financial-overview\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Financial Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-grid\",\n        children: Object.entries(financialMetrics).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"financial-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), selectedCompanies.map(company => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"financial-value\",\n            children: [company.title, \": $\", metricsData[company.ticker] && metricsData[company.ticker][key].tenKData.length > 0 ? metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString() : 'N/A']\n          }, company.ticker, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n  const renderCharts = () => {\n    var _Object$values$, _Object$values$$selec;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"financial-charts\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [financialMetrics[selectedMetric], \" Trends\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-controls\",\n          children: Object.entries(financialMetrics).map(([key, value]) => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setSelectedMetric(key),\n            className: selectedMetric === key ? 'active' : '',\n            children: value\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Annual Data (10-K)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: ((_Object$values$ = Object.values(metricsData)[0]) === null || _Object$values$ === void 0 ? void 0 : (_Object$values$$selec = _Object$values$[selectedMetric]) === null || _Object$values$$selec === void 0 ? void 0 : _Object$values$$selec.tenKData) || [],\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"end\",\n                tickFormatter: date => new Date(date).getFullYear()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                labelFormatter: date => new Date(date).toLocaleDateString(),\n                formatter: value => `$${value.toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this), selectedCompanies.map(company => /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"val\",\n                name: company.title,\n                fill: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n              }, company.ticker, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Quarterly Data (10-Q)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"end\",\n                tickFormatter: date => new Date(date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                labelFormatter: date => new Date(date).toLocaleDateString(),\n                formatter: value => `$${value.toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this), selectedCompanies.map(company => {\n                var _metricsData$company$, _metricsData$company$2;\n                return /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  data: ((_metricsData$company$ = metricsData[company.ticker]) === null || _metricsData$company$ === void 0 ? void 0 : (_metricsData$company$2 = _metricsData$company$[selectedMetric]) === null || _metricsData$company$2 === void 0 ? void 0 : _metricsData$company$2.tenQData) || [],\n                  dataKey: \"val\",\n                  name: company.title,\n                  stroke: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n                }, company.ticker, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 17\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this);\n  };\n  const handleCompanyChange = e => {\n    const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n    if (isComparing) {\n      setSelectedCompanies(prev => [...prev, selectedCompany]);\n    } else {\n      setSelectedCompanies([selectedCompany]);\n    }\n  };\n  const toggleComparison = () => {\n    setIsComparing(!isComparing);\n    if (!isComparing) {\n      setSelectedCompanies(prev => [prev[0]]);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"finvue-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FinVue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"active\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Filings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"main-header\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: (_selectedCompanies = selectedCompanies[selectedCompanies.length - 1]) === null || _selectedCompanies === void 0 ? void 0 : _selectedCompanies.ticker,\n          onChange: handleCompanyChange,\n          children: companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.ticker,\n            children: company.title\n          }, company.ticker, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleComparison,\n          children: isComparing ? 'Stop Comparing' : 'Compare Companies'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDD14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [renderFinancialOverview(), renderCharts()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(FinVueAnalysis, \"My/jjX1TSdPF1NXYGvMYZdaMNGw=\");\n_c = FinVueAnalysis;\nexport default FinVueAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FinVueAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","Card","CardContent","Button","Select","axios","jsxDEV","_jsxDEV","financialMetrics","assets","liabilities","equity","revenue","netIncome","FinVueAnalysis","_s","_selectedCompanies","selectedMetric","setSelectedMetric","metricsData","setMetricsData","loading","setLoading","error","setError","companyList","setCompanyList","selectedCompanies","setSelectedCompanies","isComparing","setIsComparing","fetchCompanies","companyTickersResponse","get","companyDataArray","Object","values","data","console","fetchData","newMetricsData","company","cik","cik_str","toString","padStart","ticker","metric","keys","response","units","USD","tenKData","filter","item","form","sort","a","b","Date","end","tenQData","length","renderFinancialOverview","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","key","value","title","val","toLocaleString","renderCharts","_Object$values$","_Object$values$$selec","onClick","width","height","strokeDasharray","dataKey","tickFormatter","date","getFullYear","labelFormatter","toLocaleDateString","formatter","name","fill","Math","floor","random","_metricsData$company$","_metricsData$company$2","type","stroke","handleCompanyChange","e","selectedCompany","find","c","target","prev","toggleComparison","onChange","_c","$RefreshReg$"],"sources":["/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport axios from 'axios';\nimport './FinVueAnalysis.css';\n\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"Stockholders' Equity\",\n  revenue: \"Revenue\",\n  netIncome: \"Net Income\",\n};\n\nconst FinVueAnalysis = () => {\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const companyTickersResponse = await axios.get(\n          \"http://localhost:5001/api/company-tickers\"\n        );\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const newMetricsData = {};\n\n        for (const company of selectedCompanies) {\n          const cik = company.cik_str.toString().padStart(10, '0');\n          newMetricsData[company.ticker] = {};\n\n          for (const metric of Object.keys(financialMetrics)) {\n            const response = await axios.get(\n              `http://localhost:5001/api/company-concept/${cik}/${financialMetrics[metric]}`\n            );\n\n            const data = response.data.units.USD;\n            const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n            const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n\n            newMetricsData[company.ticker][metric] = { tenKData, tenQData };\n          }\n        }\n\n        setMetricsData(newMetricsData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setError(\"An error occurred while fetching financial data. Please try again later.\");\n        setLoading(false);\n      }\n    };\n\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies]);\n\n  const renderFinancialOverview = () => (\n    <Card className=\"financial-overview\">\n      <CardContent>\n        <h2>Financial Overview</h2>\n        <div className=\"financial-grid\">\n          {Object.entries(financialMetrics).map(([key, value]) => (\n            <div key={key} className=\"financial-item\">\n              <h3>{value}</h3>\n              {selectedCompanies.map(company => (\n                <p key={company.ticker} className=\"financial-value\">\n                  {company.title}: $\n                  {metricsData[company.ticker] && metricsData[company.ticker][key].tenKData.length > 0\n                    ? metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()\n                    : 'N/A'}\n                </p>\n              ))}\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const renderCharts = () => (\n    <Card className=\"financial-charts\">\n      <CardContent>\n        <h2>{financialMetrics[selectedMetric]} Trends</h2>\n        <div className=\"chart-controls\">\n          {Object.entries(financialMetrics).map(([key, value]) => (\n            <Button\n              key={key}\n              onClick={() => setSelectedMetric(key)}\n              className={selectedMetric === key ? 'active' : ''}\n            >\n              {value}\n            </Button>\n          ))}\n        </div>\n        <div className=\"chart-container\">\n          <h3>Annual Data (10-K)</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={Object.values(metricsData)[0]?.[selectedMetric]?.tenKData || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).getFullYear()} />\n              <YAxis />\n              <Tooltip\n                labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                formatter={(value) => `$${value.toLocaleString()}`}\n              />\n              <Legend />\n              {selectedCompanies.map(company => (\n                <Bar key={company.ticker} dataKey=\"val\" name={company.title} fill={`#${Math.floor(Math.random()*16777215).toString(16)}`} />\n              ))}\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"chart-container\">\n          <h3>Quarterly Data (10-Q)</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).toLocaleDateString()} />\n              <YAxis />\n              <Tooltip\n                labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                formatter={(value) => `$${value.toLocaleString()}`}\n              />\n              <Legend />\n              {selectedCompanies.map(company => (\n                <Line\n                  key={company.ticker}\n                  type=\"monotone\"\n                  data={metricsData[company.ticker]?.[selectedMetric]?.tenQData || []}\n                  dataKey=\"val\"\n                  name={company.title}\n                  stroke={`#${Math.floor(Math.random()*16777215).toString(16)}`}\n                />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const handleCompanyChange = (e) => {\n    const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n    if (isComparing) {\n      setSelectedCompanies(prev => [...prev, selectedCompany]);\n    } else {\n      setSelectedCompanies([selectedCompany]);\n    }\n  };\n\n  const toggleComparison = () => {\n    setIsComparing(!isComparing);\n    if (!isComparing) {\n      setSelectedCompanies(prev => [prev[0]]);\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div className=\"finvue-analysis\">\n      <aside className=\"sidebar\">\n        <h1>FinVue</h1>\n        <nav>\n          <ul>\n            <li className=\"active\">Dashboard</li>\n            <li>Comparison</li>\n            <li>Filings</li>\n            <li>Analysis</li>\n          </ul>\n        </nav>\n      </aside>\n      <main className=\"main-content\">\n        <header className=\"main-header\">\n          <Select\n            value={selectedCompanies[selectedCompanies.length - 1]?.ticker}\n            onChange={handleCompanyChange}\n          >\n            {companyList.map(company => (\n              <option key={company.ticker} value={company.ticker}>\n                {company.title}\n              </option>\n            ))}\n          </Select>\n          <Button onClick={toggleComparison}>\n            {isComparing ? 'Stop Comparing' : 'Compare Companies'}\n          </Button>\n          <div className=\"header-icons\">\n            <span className=\"icon\">🔍</span>\n            <span className=\"icon\">🔔</span>\n            <span className=\"icon\">👤</span>\n          </div>\n        </header>\n        <div className=\"dashboard-grid\">\n          {renderFinancialOverview()}\n          {renderCharts()}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default FinVueAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}