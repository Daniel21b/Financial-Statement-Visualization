{"ast":null,"code":"var _jsxFileName = \"/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport axios from 'axios';\nimport pLimit from 'p-limit';\nimport { DollarSign, TrendingUp, Users, PieChart, Activity } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst financialMetrics = {\n  assets: {\n    name: \"Assets\",\n    icon: /*#__PURE__*/_jsxDEV(DollarSign, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 35\n    }, this)\n  },\n  liabilities: {\n    name: \"Liabilities\",\n    icon: /*#__PURE__*/_jsxDEV(TrendingUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 45\n    }, this)\n  },\n  equity: {\n    name: \"Stockholders Equity\",\n    icon: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 48\n    }, this)\n  },\n  revenue: {\n    name: \"Revenues\",\n    icon: /*#__PURE__*/_jsxDEV(PieChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 38\n    }, this)\n  },\n  netIncome: {\n    name: \"Net Income/Loss\",\n    icon: /*#__PURE__*/_jsxDEV(Activity, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 47\n    }, this)\n  }\n};\nconst limit = pLimit(5);\nconst FinVueAnalysis = () => {\n  _s();\n  var _selectedCompanies;\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoading(true);\n        const companyTickersResponse = await axios.get(\"http://localhost:5001/api/company-tickers\");\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCompanies();\n    fetchNews();\n  }, []);\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies]);\n  const fetchData = async () => {\n    // ... (keep the existing fetchData function)\n  };\n  const fetchNews = async () => {\n    try {\n      const response = await axios.get('https://api.marketaux.com/v1/news/all', {\n        params: {\n          countries: 'us',\n          filter_entities: true,\n          limit: 10,\n          published_after: '2024-07-29T21:56',\n          api_token: 'eM6ilsiHpSR7PiBPONMooaKNeP3Ks7WzSKYYbfKy'\n        }\n      });\n      setNews(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n    }\n  };\n  const renderFinancialOverview = () => /*#__PURE__*/_jsxDEV(Card, {\n    className: \"financial-overview\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Financial Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-grid\",\n        children: Object.entries(financialMetrics).map(([key, {\n          name,\n          icon\n        }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"financial-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [icon, \" \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), selectedCompanies.map(company => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"financial-value\",\n            children: [company.title, \":\", metricsData[company.ticker] && metricsData[company.ticker][key] && metricsData[company.ticker][key].tenKData && metricsData[company.ticker][key].tenKData.length > 0 ? `$${metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()}` : 'N/A']\n          }, company.ticker, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n  const renderCharts = () => /*#__PURE__*/_jsxDEV(Card, {\n    className: \"financial-charts\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [financialMetrics[selectedMetric].name, \" Trends\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-controls\",\n        children: Object.entries(financialMetrics).map(([key, {\n          name\n        }]) => /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setSelectedMetric(key),\n          className: selectedMetric === key ? 'active' : '',\n          children: name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Annual Data (10-K)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: selectedCompanies.flatMap(company => {\n              var _metricsData$company$, _metricsData$company$2;\n              return (((_metricsData$company$ = metricsData[company.ticker]) === null || _metricsData$company$ === void 0 ? void 0 : (_metricsData$company$2 = _metricsData$company$[selectedMetric]) === null || _metricsData$company$2 === void 0 ? void 0 : _metricsData$company$2.tenKData) || []).map(item => ({\n                ...item,\n                company: company.title\n              }));\n            }),\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"end\",\n              tickFormatter: date => new Date(date).getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              labelFormatter: date => new Date(date).toLocaleDateString(),\n              formatter: value => `$${value.toLocaleString()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"val\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Quarterly Data (10-Q)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: selectedCompanies.flatMap(company => {\n              var _metricsData$company$3, _metricsData$company$4;\n              return (((_metricsData$company$3 = metricsData[company.ticker]) === null || _metricsData$company$3 === void 0 ? void 0 : (_metricsData$company$4 = _metricsData$company$3[selectedMetric]) === null || _metricsData$company$4 === void 0 ? void 0 : _metricsData$company$4.tenQData) || []).map(item => ({\n                ...item,\n                company: company.title\n              }));\n            }),\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"end\",\n              tickFormatter: date => new Date(date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              labelFormatter: date => new Date(date).toLocaleDateString(),\n              formatter: value => `$${value.toLocaleString()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"val\",\n              stroke: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n  const handleCompanyChange = e => {\n    const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n    if (isComparing) {\n      setSelectedCompanies(prev => [...prev, selectedCompany]);\n    } else {\n      setSelectedCompanies([selectedCompany]);\n    }\n  };\n  const toggleComparison = () => {\n    setIsComparing(!isComparing);\n    if (!isComparing) {\n      setSelectedCompanies(prev => [prev[0]]);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"finvue-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FinVue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"active\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Filings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Live News\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"main-header\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: (_selectedCompanies = selectedCompanies[selectedCompanies.length - 1]) === null || _selectedCompanies === void 0 ? void 0 : _selectedCompanies.ticker,\n          onChange: handleCompanyChange,\n          children: companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.ticker,\n            children: company.title\n          }, company.ticker, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleComparison,\n          className: \"compare-button\",\n          children: isComparing ? '🔍 Stop Comparing' : '🔍 Compare Companies'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDD14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [renderFinancialOverview(), renderCharts()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"live-news\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Live News\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: item.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(FinVueAnalysis, \"AAV4ZNfSqGsUL7B2K35WqkkTm8Y=\");\n_c = FinVueAnalysis;\nexport default FinVueAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FinVueAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","Card","CardContent","Button","Select","axios","pLimit","DollarSign","TrendingUp","Users","PieChart","Activity","jsxDEV","_jsxDEV","financialMetrics","assets","name","icon","fileName","_jsxFileName","lineNumber","columnNumber","liabilities","equity","revenue","netIncome","limit","FinVueAnalysis","_s","_selectedCompanies","selectedMetric","setSelectedMetric","metricsData","setMetricsData","loading","setLoading","error","setError","companyList","setCompanyList","selectedCompanies","setSelectedCompanies","isComparing","setIsComparing","news","setNews","fetchCompanies","companyTickersResponse","get","companyDataArray","Object","values","data","console","fetchNews","length","fetchData","response","params","countries","filter_entities","published_after","api_token","renderFinancialOverview","className","children","entries","map","key","company","title","ticker","tenKData","val","toLocaleString","renderCharts","onClick","width","height","flatMap","_metricsData$company$","_metricsData$company$2","item","strokeDasharray","dataKey","tickFormatter","date","Date","getFullYear","labelFormatter","toLocaleDateString","formatter","value","fill","_metricsData$company$3","_metricsData$company$4","tenQData","type","stroke","handleCompanyChange","e","selectedCompany","find","c","target","prev","toggleComparison","onChange","index","href","url","rel","_c","$RefreshReg$"],"sources":["/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport axios from 'axios';\nimport pLimit from 'p-limit';\nimport { DollarSign, TrendingUp, Users, PieChart, Activity } from 'lucide-react';\n\nconst financialMetrics = {\n  assets: { name: \"Assets\", icon: <DollarSign /> },\n  liabilities: { name: \"Liabilities\", icon: <TrendingUp /> },\n  equity: { name: \"Stockholders Equity\", icon: <Users /> },\n  revenue: { name: \"Revenues\", icon: <PieChart /> },\n  netIncome: { name: \"Net Income/Loss\", icon: <Activity /> },\n};\n\nconst limit = pLimit(5);\n\nconst FinVueAnalysis = () => {\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n  const [news, setNews] = useState([]);\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoading(true);\n        const companyTickersResponse = await axios.get(\n          \"http://localhost:5001/api/company-tickers\"\n        );\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCompanies();\n    fetchNews();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies]);\n\n  const fetchData = async () => {\n    // ... (keep the existing fetchData function)\n  };\n\n  const fetchNews = async () => {\n    try {\n      const response = await axios.get(\n        'https://api.marketaux.com/v1/news/all',\n        {\n          params: {\n            countries: 'us',\n            filter_entities: true,\n            limit: 10,\n            published_after: '2024-07-29T21:56',\n            api_token: 'eM6ilsiHpSR7PiBPONMooaKNeP3Ks7WzSKYYbfKy'\n          }\n        }\n      );\n      setNews(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n    }\n  };\n\n  const renderFinancialOverview = () => (\n    <Card className=\"financial-overview\">\n      <CardContent>\n        <h2>Financial Overview</h2>\n        <div className=\"financial-grid\">\n          {Object.entries(financialMetrics).map(([key, { name, icon }]) => (\n            <div key={key} className=\"financial-item\">\n              <h3>{icon} {name}</h3>\n              {selectedCompanies.map(company => (\n                <p key={company.ticker} className=\"financial-value\">\n                  {company.title}: \n                  {metricsData[company.ticker] && \n                   metricsData[company.ticker][key] &&\n                   metricsData[company.ticker][key].tenKData &&\n                   metricsData[company.ticker][key].tenKData.length > 0\n                    ? `$${metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()}`\n                    : 'N/A'}\n                </p>\n              ))}\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const renderCharts = () => (\n    <Card className=\"financial-charts\">\n      <CardContent>\n        <h2>{financialMetrics[selectedMetric].name} Trends</h2>\n        <div className=\"chart-controls\">\n          {Object.entries(financialMetrics).map(([key, { name }]) => (\n            <Button\n              key={key}\n              onClick={() => setSelectedMetric(key)}\n              className={selectedMetric === key ? 'active' : ''}\n            >\n              {name}\n            </Button>\n          ))}\n        </div>\n        <div className=\"chart-container\">\n          <h3>Annual Data (10-K)</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={selectedCompanies.flatMap(company => \n              (metricsData[company.ticker]?.[selectedMetric]?.tenKData || []).map(item => ({\n                ...item,\n                company: company.title\n              }))\n            )}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).getFullYear()} />\n              <YAxis />\n              <Tooltip\n                labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                formatter={(value) => `$${value.toLocaleString()}`}\n              />\n              <Legend />\n              <Bar dataKey=\"val\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"chart-container\">\n          <h3>Quarterly Data (10-Q)</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={selectedCompanies.flatMap(company => \n              (metricsData[company.ticker]?.[selectedMetric]?.tenQData || []).map(item => ({\n                ...item,\n                company: company.title\n              }))\n            )}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).toLocaleDateString()} />\n              <YAxis />\n              <Tooltip\n                labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                formatter={(value) => `$${value.toLocaleString()}`}\n              />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"val\" stroke=\"#8884d8\" />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const handleCompanyChange = (e) => {\n    const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n    if (isComparing) {\n      setSelectedCompanies(prev => [...prev, selectedCompany]);\n    } else {\n      setSelectedCompanies([selectedCompany]);\n    }\n  };\n\n  const toggleComparison = () => {\n    setIsComparing(!isComparing);\n    if (!isComparing) {\n      setSelectedCompanies(prev => [prev[0]]);\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div className=\"finvue-analysis\">\n      <aside className=\"sidebar\">\n        <h1>FinVue</h1>\n        <nav>\n          <ul>\n            <li className=\"active\">Dashboard</li>\n            <li>Filings</li>\n            <li>Live News</li>\n          </ul>\n        </nav>\n      </aside>\n      <main className=\"main-content\">\n        <header className=\"main-header\">\n          <Select\n            value={selectedCompanies[selectedCompanies.length - 1]?.ticker}\n            onChange={handleCompanyChange}\n          >\n            {companyList.map(company => (\n              <option key={company.ticker} value={company.ticker}>\n                {company.title}\n              </option>\n            ))}\n          </Select>\n          <Button onClick={toggleComparison} className=\"compare-button\">\n            {isComparing ? '🔍 Stop Comparing' : '🔍 Compare Companies'}\n          </Button>\n          <div className=\"header-icons\">\n            <span className=\"icon\">🔍</span>\n            <span className=\"icon\">🔔</span>\n            <span className=\"icon\">👤</span>\n          </div>\n        </header>\n        <div className=\"dashboard-grid\">\n          {renderFinancialOverview()}\n          {renderCharts()}\n        </div>\n        <Card className=\"live-news\">\n          <CardContent>\n            <h2>Live News</h2>\n            <ul>\n              {news.map((item, index) => (\n                <li key={index}>\n                  <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a>\n                </li>\n              ))}\n            </ul>\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n};\n\nexport default FinVueAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}