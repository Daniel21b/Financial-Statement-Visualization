{"ast":null,"code":"var _jsxFileName = \"/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport { Bell, User, Home, Users, LogOut } from 'lucide-react';\nimport axios from 'axios';\nimport pLimit from 'p-limit';\nimport './FinVueAnalysis.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"StockholdersEquity\",\n  revenue: \"Revenues\",\n  netIncome: \"NetIncomeLoss\"\n};\nconst limit = pLimit(5);\nconst FinVueAnalysis = () => {\n  _s();\n  var _selectedCompanies;\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n  const [showNews, setShowNews] = useState(false);\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoading(true);\n        const companyTickersResponse = await axios.get(\"http://localhost:5001/api/company-tickers\");\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCompanies();\n    fetchNews();\n  }, []);\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies]);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const newMetricsData = {};\n      const fetchPromises = selectedCompanies.flatMap(company => {\n        const cik = company.cik_str.toString().padStart(10, '0');\n        newMetricsData[company.ticker] = {};\n        return Object.entries(financialMetrics).map(([key, value]) => limit(async () => {\n          try {\n            console.log(`Fetching data for ${company.ticker}, metric: ${value}`);\n            const response = await axios.get(`http://localhost:5001/api/company-concept/${cik}/${value}`);\n            const data = response.data.units.USD;\n            const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n            const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n            newMetricsData[company.ticker][key] = {\n              tenKData,\n              tenQData\n            };\n          } catch (error) {\n            console.error(`Error fetching data for ${company.ticker}, metric: ${value}`, error.message);\n            newMetricsData[company.ticker][key] = {\n              tenKData: [],\n              tenQData: []\n            };\n          }\n        }));\n      });\n      await Promise.all(fetchPromises);\n      setMetricsData(newMetricsData);\n    } catch (error) {\n      console.error(\"Error in fetchData:\", error);\n      setError(\"An error occurred while fetching financial data. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchNews = async () => {\n    try {\n      const response = await axios.get('https://api.marketaux.com/v1/news/all', {\n        params: {\n          countries: 'us',\n          filter_entities: true,\n          limit: 10,\n          published_after: '2024-07-29T21:56',\n          api_token: 'eM6ilsiHpSR7PiBPONMooaKNeP3Ks7WzSKYYbfKy'\n        }\n      });\n      setNews(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n    }\n  };\n  const renderFinancialOverview = () => /*#__PURE__*/_jsxDEV(Card, {\n    className: \"financial-overview\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Financial Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-grid\",\n        children: Object.entries(financialMetrics).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"financial-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), selectedCompanies.map(company => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"financial-value\",\n            children: [company.title, \":\", metricsData[company.ticker] && metricsData[company.ticker][key] && metricsData[company.ticker][key].tenKData && metricsData[company.ticker][key].tenKData.length > 0 ? `$${metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()}` : 'N/A']\n          }, company.ticker, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n  const renderCharts = () => {\n    const getChartData = (data, metric) => data.map(item => ({\n      ...item,\n      end: new Date(item.end).toISOString().split('T')[0],\n      value: item.val\n    }));\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"financial-charts\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [financialMetrics[selectedMetric], \" Trends\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-controls\",\n          children: Object.entries(financialMetrics).map(([key, value]) => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setSelectedMetric(key),\n            className: selectedMetric === key ? 'active' : '',\n            children: value\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Annual Data (10-K)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: selectedCompanies.flatMap(company => {\n                var _metricsData$company$, _metricsData$company$2;\n                return getChartData(((_metricsData$company$ = metricsData[company.ticker]) === null || _metricsData$company$ === void 0 ? void 0 : (_metricsData$company$2 = _metricsData$company$[selectedMetric]) === null || _metricsData$company$2 === void 0 ? void 0 : _metricsData$company$2.tenKData) || [], selectedMetric);\n              }),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"end\",\n                tickFormatter: date => new Date(date).getFullYear()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                labelFormatter: date => new Date(date).toLocaleDateString(),\n                formatter: value => `$${value.toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"value\",\n                fill: \"#4a5568\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Quarterly Data (10-Q)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: selectedCompanies.flatMap(company => {\n                var _metricsData$company$3, _metricsData$company$4;\n                return getChartData(((_metricsData$company$3 = metricsData[company.ticker]) === null || _metricsData$company$3 === void 0 ? void 0 : (_metricsData$company$4 = _metricsData$company$3[selectedMetric]) === null || _metricsData$company$4 === void 0 ? void 0 : _metricsData$company$4.tenQData) || [], selectedMetric);\n              }),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"end\",\n                tickFormatter: date => new Date(date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                labelFormatter: date => new Date(date).toLocaleDateString(),\n                formatter: value => `$${value.toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"value\",\n                stroke: \"#4a5568\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCompanyChange = e => {\n    const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n    if (isComparing) {\n      setSelectedCompanies(prev => [...prev, selectedCompany]);\n    } else {\n      setSelectedCompanies([selectedCompany]);\n    }\n  };\n  const toggleComparison = () => {\n    setIsComparing(!isComparing);\n    if (!isComparing) {\n      setSelectedCompanies(prev => [prev[0]]);\n    }\n  };\n  const renderNews = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `news-dropdown ${showNews ? 'show' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Latest News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: news.slice(0, 5).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"view-all\",\n      children: \"View All News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"finvue-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FinVue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"active\",\n            children: [/*#__PURE__*/_jsxDEV(Home, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 36\n            }, this), \" Dashboard\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: toggleComparison,\n            children: [/*#__PURE__*/_jsxDEV(Users, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 44\n            }, this), \" \", isComparing ? 'Stop Comparing' : 'Compare Companies']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout\",\n        children: [/*#__PURE__*/_jsxDEV(LogOut, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), \" Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"main-header\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: (_selectedCompanies = selectedCompanies[selectedCompanies.length - 1]) === null || _selectedCompanies === void 0 ? void 0 : _selectedCompanies.ticker,\n          onChange: handleCompanyChange,\n          children: companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.ticker,\n            children: company.title\n          }, company.ticker, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-icons\",\n          children: [/*#__PURE__*/_jsxDEV(Bell, {\n            size: 20,\n            onClick: () => setShowNews(!showNews)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(User, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [renderFinancialOverview(), renderCharts()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), renderNews()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(FinVueAnalysis, \"MONedTKLzSYrd/gnrnT5uJshoKM=\");\n_c = FinVueAnalysis;\nexport default FinVueAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FinVueAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","Card","CardContent","Button","Select","Bell","User","Home","Users","LogOut","axios","pLimit","jsxDEV","_jsxDEV","financialMetrics","assets","liabilities","equity","revenue","netIncome","limit","FinVueAnalysis","_s","_selectedCompanies","selectedMetric","setSelectedMetric","metricsData","setMetricsData","loading","setLoading","error","setError","companyList","setCompanyList","selectedCompanies","setSelectedCompanies","isComparing","setIsComparing","showNews","setShowNews","news","setNews","fetchCompanies","companyTickersResponse","get","companyDataArray","Object","values","data","console","fetchNews","length","fetchData","newMetricsData","fetchPromises","flatMap","company","cik","cik_str","toString","padStart","ticker","entries","map","key","value","log","response","units","USD","tenKData","filter","item","form","sort","a","b","Date","end","tenQData","message","Promise","all","params","countries","filter_entities","published_after","api_token","renderFinancialOverview","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","val","toLocaleString","renderCharts","getChartData","metric","toISOString","split","onClick","width","height","_metricsData$company$","_metricsData$company$2","strokeDasharray","dataKey","tickFormatter","date","getFullYear","labelFormatter","toLocaleDateString","formatter","fill","_metricsData$company$3","_metricsData$company$4","type","stroke","handleCompanyChange","e","selectedCompany","find","c","target","prev","toggleComparison","renderNews","slice","index","href","url","rel","size","onChange","_c","$RefreshReg$"],"sources":["/Users/danielberhane/Desktop/Financial Statement Visualization/financialvisualization/src/components/FinVueAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Card } from './Card';\nimport { CardContent } from './CardContent';\nimport { Button } from './Button';\nimport { Select } from './Select';\nimport { Bell, User, Home, Users, LogOut } from 'lucide-react';\nimport axios from 'axios';\nimport pLimit from 'p-limit';\nimport './FinVueAnalysis.css';\n\nconst financialMetrics = {\n  assets: \"Assets\",\n  liabilities: \"Liabilities\",\n  equity: \"StockholdersEquity\",\n  revenue: \"Revenues\",\n  netIncome: \"NetIncomeLoss\",\n};\n\nconst limit = pLimit(5);\n\nconst FinVueAnalysis = () => {\n  const [selectedMetric, setSelectedMetric] = useState('assets');\n  const [metricsData, setMetricsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n  const [showNews, setShowNews] = useState(false);\n  const [news, setNews] = useState([]);\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoading(true);\n        const companyTickersResponse = await axios.get(\n          \"http://localhost:5001/api/company-tickers\"\n        );\n        const companyDataArray = Object.values(companyTickersResponse.data);\n        setCompanyList(companyDataArray);\n        setSelectedCompanies([companyDataArray[0]]);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n        setError(\"An error occurred while fetching company data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCompanies();\n    fetchNews();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCompanies.length > 0) {\n      fetchData();\n    }\n  }, [selectedCompanies]);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const newMetricsData = {};\n\n      const fetchPromises = selectedCompanies.flatMap(company => {\n        const cik = company.cik_str.toString().padStart(10, '0');\n        newMetricsData[company.ticker] = {};\n\n        return Object.entries(financialMetrics).map(([key, value]) =>\n          limit(async () => {\n            try {\n              console.log(`Fetching data for ${company.ticker}, metric: ${value}`);\n              const response = await axios.get(\n                `http://localhost:5001/api/company-concept/${cik}/${value}`\n              );\n\n              const data = response.data.units.USD;\n              const tenKData = data.filter(item => item.form === '10-K').sort((a, b) => new Date(a.end) - new Date(b.end));\n              const tenQData = data.filter(item => item.form === '10-Q').sort((a, b) => new Date(a.end) - new Date(b.end));\n\n              newMetricsData[company.ticker][key] = { tenKData, tenQData };\n            } catch (error) {\n              console.error(`Error fetching data for ${company.ticker}, metric: ${value}`, error.message);\n              newMetricsData[company.ticker][key] = { tenKData: [], tenQData: [] };\n            }\n          })\n        );\n      });\n\n      await Promise.all(fetchPromises);\n      setMetricsData(newMetricsData);\n    } catch (error) {\n      console.error(\"Error in fetchData:\", error);\n      setError(\"An error occurred while fetching financial data. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchNews = async () => {\n    try {\n      const response = await axios.get('https://api.marketaux.com/v1/news/all', {\n        params: {\n          countries: 'us',\n          filter_entities: true,\n          limit: 10,\n          published_after: '2024-07-29T21:56',\n          api_token: 'eM6ilsiHpSR7PiBPONMooaKNeP3Ks7WzSKYYbfKy'\n        }\n      });\n      setNews(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n    }\n  };\n\n  const renderFinancialOverview = () => (\n    <Card className=\"financial-overview\">\n      <CardContent>\n        <h2>Financial Overview</h2>\n        <div className=\"financial-grid\">\n          {Object.entries(financialMetrics).map(([key, value]) => (\n            <div key={key} className=\"financial-item\">\n              <h3>{value}</h3>\n              {selectedCompanies.map(company => (\n                <p key={company.ticker} className=\"financial-value\">\n                  {company.title}: \n                  {metricsData[company.ticker] && \n                   metricsData[company.ticker][key] &&\n                   metricsData[company.ticker][key].tenKData &&\n                   metricsData[company.ticker][key].tenKData.length > 0\n                    ? `$${metricsData[company.ticker][key].tenKData[metricsData[company.ticker][key].tenKData.length - 1].val.toLocaleString()}`\n                    : 'N/A'}\n                </p>\n              ))}\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const renderCharts = () => {\n    const getChartData = (data, metric) => data.map(item => ({\n      ...item,\n      end: new Date(item.end).toISOString().split('T')[0],\n      value: item.val,\n    }));\n\n    return (\n      <Card className=\"financial-charts\">\n        <CardContent>\n          <h2>{financialMetrics[selectedMetric]} Trends</h2>\n          <div className=\"chart-controls\">\n            {Object.entries(financialMetrics).map(([key, value]) => (\n              <Button\n                key={key}\n                onClick={() => setSelectedMetric(key)}\n                className={selectedMetric === key ? 'active' : ''}\n              >\n                {value}\n              </Button>\n            ))}\n          </div>\n          <div className=\"chart-container\">\n            <h3>Annual Data (10-K)</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={selectedCompanies.flatMap(company => getChartData(metricsData[company.ticker]?.[selectedMetric]?.tenKData || [], selectedMetric))}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).getFullYear()} />\n                <YAxis />\n                <Tooltip\n                  labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                  formatter={(value) => `$${value.toLocaleString()}`}\n                />\n                <Legend />\n                <Bar dataKey=\"value\" fill=\"#4a5568\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"chart-container\">\n            <h3>Quarterly Data (10-Q)</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={selectedCompanies.flatMap(company => getChartData(metricsData[company.ticker]?.[selectedMetric]?.tenQData || [], selectedMetric))}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"end\" tickFormatter={(date) => new Date(date).toLocaleDateString()} />\n                <YAxis />\n                <Tooltip\n                  labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                  formatter={(value) => `$${value.toLocaleString()}`}\n                />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#4a5568\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const handleCompanyChange = (e) => {\n    const selectedCompany = companyList.find(c => c.ticker === e.target.value);\n    if (isComparing) {\n      setSelectedCompanies(prev => [...prev, selectedCompany]);\n    } else {\n      setSelectedCompanies([selectedCompany]);\n    }\n  };\n\n  const toggleComparison = () => {\n    setIsComparing(!isComparing);\n    if (!isComparing) {\n      setSelectedCompanies(prev => [prev[0]]);\n    }\n  };\n\n  const renderNews = () => (\n    <div className={`news-dropdown ${showNews ? 'show' : ''}`}>\n      <h3>Latest News</h3>\n      <ul>\n        {news.slice(0, 5).map((item, index) => (\n          <li key={index}>\n            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a>\n          </li>\n        ))}\n      </ul>\n      <a href=\"#\" className=\"view-all\">View All News</a>\n    </div>\n  );\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"finvue-analysis\">\n      <aside className=\"sidebar\">\n        <h1>FinVue</h1>\n        <nav>\n          <ul>\n            <li className=\"active\"><Home size={18} /> Dashboard</li>\n            <li onClick={toggleComparison}><Users size={18} /> {isComparing ? 'Stop Comparing' : 'Compare Companies'}</li>\n          </ul>\n        </nav>\n        <div className=\"logout\">\n          <LogOut size={18} /> Logout\n        </div>\n      </aside>\n      <main className=\"main-content\">\n        <header className=\"main-header\">\n          <Select\n            value={selectedCompanies[selectedCompanies.length - 1]?.ticker}\n            onChange={handleCompanyChange}\n          >\n            {companyList.map(company => (\n              <option key={company.ticker} value={company.ticker}>\n                {company.title}\n              </option>\n            ))}\n          </Select>\n          <div className=\"header-icons\">\n            <Bell size={20} onClick={() => setShowNews(!showNews)} />\n            <User size={20} />\n          </div>\n        </header>\n        <div className=\"dashboard-grid\">\n          {renderFinancialOverview()}\n          {renderCharts()}\n        </div>\n      </main>\n      {renderNews()}\n    </div>\n  );\n};\n\nexport default FinVueAnalysis;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,UAAU;AAC5H,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,cAAc;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,SAAS;AAC5B,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,gBAAgB,GAAG;EACvBC,MAAM,EAAE,QAAQ;EAChBC,WAAW,EAAE,aAAa;EAC1BC,MAAM,EAAE,oBAAoB;EAC5BC,OAAO,EAAE,UAAU;EACnBC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,KAAK,GAAGT,MAAM,CAAC,CAAC,CAAC;AAEvB,MAAMU,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAC,QAAQ,CAAC;EAC9D,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyC,KAAK,EAAEC,QAAQ,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC+C,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiD,QAAQ,EAAEC,WAAW,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmD,IAAI,EAAEC,OAAO,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMoD,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACFb,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMc,sBAAsB,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAC5C,2CACF,CAAC;QACD,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAACJ,sBAAsB,CAACK,IAAI,CAAC;QACnEf,cAAc,CAACY,gBAAgB,CAAC;QAChCV,oBAAoB,CAAC,CAACU,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7C,CAAC,CAAC,OAAOf,KAAK,EAAE;QACdmB,OAAO,CAACnB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,wEAAwE,CAAC;MACpF,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDa,cAAc,CAAC,CAAC;IAChBQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN5D,SAAS,CAAC,MAAM;IACd,IAAI4C,iBAAiB,CAACiB,MAAM,GAAG,CAAC,EAAE;MAChCC,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAAClB,iBAAiB,CAAC,CAAC;EAEvB,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFvB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMwB,cAAc,GAAG,CAAC,CAAC;MAEzB,MAAMC,aAAa,GAAGpB,iBAAiB,CAACqB,OAAO,CAACC,OAAO,IAAI;QACzD,MAAMC,GAAG,GAAGD,OAAO,CAACE,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC;QACxDP,cAAc,CAACG,OAAO,CAACK,MAAM,CAAC,GAAG,CAAC,CAAC;QAEnC,OAAOf,MAAM,CAACgB,OAAO,CAAChD,gBAAgB,CAAC,CAACiD,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KACvD7C,KAAK,CAAC,YAAY;UAChB,IAAI;YACF6B,OAAO,CAACiB,GAAG,CAAC,qBAAqBV,OAAO,CAACK,MAAM,aAAaI,KAAK,EAAE,CAAC;YACpE,MAAME,QAAQ,GAAG,MAAMzD,KAAK,CAACkC,GAAG,CAC9B,6CAA6Ca,GAAG,IAAIQ,KAAK,EAC3D,CAAC;YAED,MAAMjB,IAAI,GAAGmB,QAAQ,CAACnB,IAAI,CAACoB,KAAK,CAACC,GAAG;YACpC,MAAMC,QAAQ,GAAGtB,IAAI,CAACuB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,GAAG,CAAC,CAAC;YAC5G,MAAMC,QAAQ,GAAG/B,IAAI,CAACuB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,GAAG,CAAC,CAAC;YAE5GzB,cAAc,CAACG,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,GAAG;cAAEM,QAAQ;cAAES;YAAS,CAAC;UAC9D,CAAC,CAAC,OAAOjD,KAAK,EAAE;YACdmB,OAAO,CAACnB,KAAK,CAAC,2BAA2B0B,OAAO,CAACK,MAAM,aAAaI,KAAK,EAAE,EAAEnC,KAAK,CAACkD,OAAO,CAAC;YAC3F3B,cAAc,CAACG,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,GAAG;cAAEM,QAAQ,EAAE,EAAE;cAAES,QAAQ,EAAE;YAAG,CAAC;UACtE;QACF,CAAC,CACH,CAAC;MACH,CAAC,CAAC;MAEF,MAAME,OAAO,CAACC,GAAG,CAAC5B,aAAa,CAAC;MAChC3B,cAAc,CAAC0B,cAAc,CAAC;IAChC,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,0EAA0E,CAAC;IACtF,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMzD,KAAK,CAACkC,GAAG,CAAC,uCAAuC,EAAE;QACxEuC,MAAM,EAAE;UACNC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,IAAI;UACrBjE,KAAK,EAAE,EAAE;UACTkE,eAAe,EAAE,kBAAkB;UACnCC,SAAS,EAAE;QACb;MACF,CAAC,CAAC;MACF9C,OAAO,CAAC0B,QAAQ,CAACnB,IAAI,CAACA,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAM0D,uBAAuB,GAAGA,CAAA,kBAC9B3E,OAAA,CAACZ,IAAI;IAACwF,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eAClC7E,OAAA,CAACX,WAAW;MAAAwF,QAAA,gBACV7E,OAAA;QAAA6E,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BjF,OAAA;QAAK4E,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5B5C,MAAM,CAACgB,OAAO,CAAChD,gBAAgB,CAAC,CAACiD,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACjDpD,OAAA;UAAe4E,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBACvC7E,OAAA;YAAA6E,QAAA,EAAKzB;UAAK;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACf5D,iBAAiB,CAAC6B,GAAG,CAACP,OAAO,iBAC5B3C,OAAA;YAAwB4E,SAAS,EAAC,iBAAiB;YAAAC,QAAA,GAChDlC,OAAO,CAACuC,KAAK,EAAC,GACf,EAACrE,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,IAC3BnC,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,IAChCtC,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,CAACM,QAAQ,IACzC5C,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,CAACM,QAAQ,CAACnB,MAAM,GAAG,CAAC,GACjD,IAAIzB,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,CAACM,QAAQ,CAAC5C,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,CAACG,GAAG,CAAC,CAACM,QAAQ,CAACnB,MAAM,GAAG,CAAC,CAAC,CAAC6C,GAAG,CAACC,cAAc,CAAC,CAAC,EAAE,GAC1H,KAAK;UAAA,GAPHzC,OAAO,CAACK,MAAM;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQnB,CACJ,CAAC;QAAA,GAZM9B,GAAG;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaR,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CACP;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAGA,CAACnD,IAAI,EAAEoD,MAAM,KAAKpD,IAAI,CAACe,GAAG,CAACS,IAAI,KAAK;MACvD,GAAGA,IAAI;MACPM,GAAG,EAAE,IAAID,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,CAACuB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnDrC,KAAK,EAAEO,IAAI,CAACwB;IACd,CAAC,CAAC,CAAC;IAEH,oBACEnF,OAAA,CAACZ,IAAI;MAACwF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAChC7E,OAAA,CAACX,WAAW;QAAAwF,QAAA,gBACV7E,OAAA;UAAA6E,QAAA,GAAK5E,gBAAgB,CAACU,cAAc,CAAC,EAAC,SAAO;QAAA;UAAAmE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDjF,OAAA;UAAK4E,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5B5C,MAAM,CAACgB,OAAO,CAAChD,gBAAgB,CAAC,CAACiD,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACjDpD,OAAA,CAACV,MAAM;YAELoG,OAAO,EAAEA,CAAA,KAAM9E,iBAAiB,CAACuC,GAAG,CAAE;YACtCyB,SAAS,EAAEjE,cAAc,KAAKwC,GAAG,GAAG,QAAQ,GAAG,EAAG;YAAA0B,QAAA,EAEjDzB;UAAK,GAJDD,GAAG;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKF,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNjF,OAAA;UAAK4E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B7E,OAAA;YAAA6E,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BjF,OAAA,CAACd,mBAAmB;YAACyG,KAAK,EAAC,MAAM;YAACC,MAAM,EAAE,GAAI;YAAAf,QAAA,eAC5C7E,OAAA,CAACtB,QAAQ;cAACyD,IAAI,EAAEd,iBAAiB,CAACqB,OAAO,CAACC,OAAO;gBAAA,IAAAkD,qBAAA,EAAAC,sBAAA;gBAAA,OAAIR,YAAY,CAAC,EAAAO,qBAAA,GAAAhF,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,cAAA6C,qBAAA,wBAAAC,sBAAA,GAA3BD,qBAAA,CAA8BlF,cAAc,CAAC,cAAAmF,sBAAA,uBAA7CA,sBAAA,CAA+CrC,QAAQ,KAAI,EAAE,EAAE9C,cAAc,CAAC;cAAA,EAAE;cAAAkE,QAAA,gBAChJ7E,OAAA,CAAChB,aAAa;gBAAC+G,eAAe,EAAC;cAAK;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvCjF,OAAA,CAAClB,KAAK;gBAACkH,OAAO,EAAC,KAAK;gBAACC,aAAa,EAAGC,IAAI,IAAK,IAAIlC,IAAI,CAACkC,IAAI,CAAC,CAACC,WAAW,CAAC;cAAE;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC9EjF,OAAA,CAACjB,KAAK;gBAAA+F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACTjF,OAAA,CAACf,OAAO;gBACNmH,cAAc,EAAGF,IAAI,IAAK,IAAIlC,IAAI,CAACkC,IAAI,CAAC,CAACG,kBAAkB,CAAC,CAAE;gBAC9DC,SAAS,EAAGlD,KAAK,IAAK,IAAIA,KAAK,CAACgC,cAAc,CAAC,CAAC;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,eACFjF,OAAA,CAACb,MAAM;gBAAA2F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACVjF,OAAA,CAACrB,GAAG;gBAACqH,OAAO,EAAC,OAAO;gBAACO,IAAI,EAAC;cAAS;gBAAAzB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACNjF,OAAA;UAAK4E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B7E,OAAA;YAAA6E,QAAA,EAAI;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9BjF,OAAA,CAACd,mBAAmB;YAACyG,KAAK,EAAC,MAAM;YAACC,MAAM,EAAE,GAAI;YAAAf,QAAA,eAC5C7E,OAAA,CAACpB,SAAS;cAACuD,IAAI,EAAEd,iBAAiB,CAACqB,OAAO,CAACC,OAAO;gBAAA,IAAA6D,sBAAA,EAAAC,sBAAA;gBAAA,OAAInB,YAAY,CAAC,EAAAkB,sBAAA,GAAA3F,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,cAAAwD,sBAAA,wBAAAC,sBAAA,GAA3BD,sBAAA,CAA8B7F,cAAc,CAAC,cAAA8F,sBAAA,uBAA7CA,sBAAA,CAA+CvC,QAAQ,KAAI,EAAE,EAAEvD,cAAc,CAAC;cAAA,EAAE;cAAAkE,QAAA,gBACjJ7E,OAAA,CAAChB,aAAa;gBAAC+G,eAAe,EAAC;cAAK;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvCjF,OAAA,CAAClB,KAAK;gBAACkH,OAAO,EAAC,KAAK;gBAACC,aAAa,EAAGC,IAAI,IAAK,IAAIlC,IAAI,CAACkC,IAAI,CAAC,CAACG,kBAAkB,CAAC;cAAE;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACrFjF,OAAA,CAACjB,KAAK;gBAAA+F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACTjF,OAAA,CAACf,OAAO;gBACNmH,cAAc,EAAGF,IAAI,IAAK,IAAIlC,IAAI,CAACkC,IAAI,CAAC,CAACG,kBAAkB,CAAC,CAAE;gBAC9DC,SAAS,EAAGlD,KAAK,IAAK,IAAIA,KAAK,CAACgC,cAAc,CAAC,CAAC;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,eACFjF,OAAA,CAACb,MAAM;gBAAA2F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACVjF,OAAA,CAACnB,IAAI;gBAAC6H,IAAI,EAAC,UAAU;gBAACV,OAAO,EAAC,OAAO;gBAACW,MAAM,EAAC;cAAS;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEX,CAAC;EAED,MAAM2B,mBAAmB,GAAIC,CAAC,IAAK;IACjC,MAAMC,eAAe,GAAG3F,WAAW,CAAC4F,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChE,MAAM,KAAK6D,CAAC,CAACI,MAAM,CAAC7D,KAAK,CAAC;IAC1E,IAAI7B,WAAW,EAAE;MACfD,oBAAoB,CAAC4F,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,eAAe,CAAC,CAAC;IAC1D,CAAC,MAAM;MACLxF,oBAAoB,CAAC,CAACwF,eAAe,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7B3F,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5B,IAAI,CAACA,WAAW,EAAE;MAChBD,oBAAoB,CAAC4F,IAAI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,kBACjBpH,OAAA;IAAK4E,SAAS,EAAE,iBAAiBnD,QAAQ,GAAG,MAAM,GAAG,EAAE,EAAG;IAAAoD,QAAA,gBACxD7E,OAAA;MAAA6E,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjF,OAAA;MAAA6E,QAAA,EACGlD,IAAI,CAAC0F,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACnE,GAAG,CAAC,CAACS,IAAI,EAAE2D,KAAK,kBAChCtH,OAAA;QAAA6E,QAAA,eACE7E,OAAA;UAAGuH,IAAI,EAAE5D,IAAI,CAAC6D,GAAI;UAACP,MAAM,EAAC,QAAQ;UAACQ,GAAG,EAAC,qBAAqB;UAAA5C,QAAA,EAAElB,IAAI,CAACuB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADtEqC,KAAK;QAAAxC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLjF,OAAA;MAAGuH,IAAI,EAAC,GAAG;MAAC3C,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CACN;EAED,IAAIlE,OAAO,EAAE,oBAAOf,OAAA;IAAK4E,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC7D,IAAIhE,KAAK,EAAE,oBAAOjB,OAAA;IAAK4E,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAE5D;EAAK;IAAA6D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEtD,oBACEjF,OAAA;IAAK4E,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B7E,OAAA;MAAO4E,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACxB7E,OAAA;QAAA6E,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfjF,OAAA;QAAA6E,QAAA,eACE7E,OAAA;UAAA6E,QAAA,gBACE7E,OAAA;YAAI4E,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBAAC7E,OAAA,CAACN,IAAI;cAACgI,IAAI,EAAE;YAAG;cAAA5C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,cAAU;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxDjF,OAAA;YAAI0F,OAAO,EAAEyB,gBAAiB;YAAAtC,QAAA,gBAAC7E,OAAA,CAACL,KAAK;cAAC+H,IAAI,EAAE;YAAG;cAAA5C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,EAAC1D,WAAW,GAAG,gBAAgB,GAAG,mBAAmB;UAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5G;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNjF,OAAA;QAAK4E,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB7E,OAAA,CAACJ,MAAM;UAAC8H,IAAI,EAAE;QAAG;UAAA5C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,WACtB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACRjF,OAAA;MAAM4E,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC5B7E,OAAA;QAAQ4E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC7B7E,OAAA,CAACT,MAAM;UACL6D,KAAK,GAAA1C,kBAAA,GAAEW,iBAAiB,CAACA,iBAAiB,CAACiB,MAAM,GAAG,CAAC,CAAC,cAAA5B,kBAAA,uBAA/CA,kBAAA,CAAiDsC,MAAO;UAC/D2E,QAAQ,EAAEf,mBAAoB;UAAA/B,QAAA,EAE7B1D,WAAW,CAAC+B,GAAG,CAACP,OAAO,iBACtB3C,OAAA;YAA6BoD,KAAK,EAAET,OAAO,CAACK,MAAO;YAAA6B,QAAA,EAChDlC,OAAO,CAACuC;UAAK,GADHvC,OAAO,CAACK,MAAM;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEnB,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACTjF,OAAA;UAAK4E,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B7E,OAAA,CAACR,IAAI;YAACkI,IAAI,EAAE,EAAG;YAAChC,OAAO,EAAEA,CAAA,KAAMhE,WAAW,CAAC,CAACD,QAAQ;UAAE;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzDjF,OAAA,CAACP,IAAI;YAACiI,IAAI,EAAE;UAAG;YAAA5C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACTjF,OAAA;QAAK4E,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BF,uBAAuB,CAAC,CAAC,EACzBU,YAAY,CAAC,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACNmC,UAAU,CAAC,CAAC;EAAA;IAAAtC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACxE,EAAA,CA7PID,cAAc;AAAAoH,EAAA,GAAdpH,cAAc;AA+PpB,eAAeA,cAAc;AAAC,IAAAoH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}